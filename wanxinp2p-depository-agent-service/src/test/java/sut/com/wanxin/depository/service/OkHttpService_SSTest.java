/*
 * This file was automatically generated by SmartUnit
 */

package sut.com.wanxin.depository.service;

import org.junit.Test;
import static org.junit.Assert.*;
import java.lang.reflect.Method;
import static org.smartunit.shaded.org.mockito.Mockito.*;
import org.smartunit.shaded.org.mockito.ArgumentMatchers;
import static org.smartunit.runtime.SmartAssertions.*;
import com.wanxin.depository.interceptor.SignatureInterceptor;
import com.wanxin.depository.service.OkHttpService;
import org.junit.runner.RunWith;
import org.smartunit.runtime.ExecutorServiceAnswer;
import org.smartunit.runtime.PrivateAccess;
import org.smartunit.runtime.SmartRunner;
import org.smartunit.runtime.SmartRunnerParameters;
import org.smartunit.runtime.TransactionTemplateAnswer;
import org.smartunit.runtime.ViolatedAssumptionAnswer;

@RunWith(SmartRunner.class) @SmartRunnerParameters(mockJVMNonDeterminism = true, useVNET = true, resetStaticState = true) 
public class OkHttpService_SSTest extends OkHttpService_SSTest_scaffolding {
// allCoveredLines:[21, 33, 34]

  @Test(timeout = 9000)
  public void test_doSyncGet_0()  throws Throwable  {
      //caseID:5fece8779e7a42948a207919f9eafd4a
      //CoveredLines: [21, 33, 34]
      //Input_0_String: 
      
      OkHttpService okHttpService0 = new OkHttpService();
      //mock signatureInterceptor0
      SignatureInterceptor signatureInterceptor0 = mock(SignatureInterceptor.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      
      PrivateAccess.setVariable((Class<?>) OkHttpService.class, okHttpService0, "signatureInterceptor", (Object) signatureInterceptor0);
      
      //Call method: doSyncGet
      // Undeclared exception!
      try { 
        okHttpService0.doSyncGet("");
      } catch(Throwable e) {
      }
  }
}
