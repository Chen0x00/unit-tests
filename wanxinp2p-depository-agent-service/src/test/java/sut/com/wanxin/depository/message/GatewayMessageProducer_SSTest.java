/*
 * This file was automatically generated by SmartUnit
 */

package sut.com.wanxin.depository.message;

import org.junit.Test;
import static org.junit.Assert.*;
import java.lang.reflect.Method;
import static org.smartunit.shaded.org.mockito.Mockito.*;
import org.smartunit.shaded.org.mockito.ArgumentMatchers;
import static org.smartunit.runtime.SmartAssertions.*;
import com.wanxin.api.depository.model.DepositoryConsumerResponse;
import com.wanxin.api.depository.model.DepositoryRechargeResponse;
import com.wanxin.api.depository.model.DepositoryWithdrawResponse;
import com.wanxin.depository.message.GatewayMessageProducer;
import org.junit.runner.RunWith;
import org.smartunit.runtime.ExecutorServiceAnswer;
import org.smartunit.runtime.SmartRunner;
import org.smartunit.runtime.SmartRunnerParameters;
import org.smartunit.runtime.TransactionTemplateAnswer;
import org.smartunit.runtime.ViolatedAssumptionAnswer;

@RunWith(SmartRunner.class) @SmartRunnerParameters(mockJVMNonDeterminism = true, useVNET = true, resetStaticState = true) 
public class GatewayMessageProducer_SSTest extends GatewayMessageProducer_SSTest_scaffolding {
// allCoveredLines:[20, 25, 29, 33]

  @Test(timeout = 9000)
  public void test_personalRecharge_0()  throws Throwable  {
      //caseID:10250075d9a0b29ea3fbf2474324e256
      //CoveredLines: [20, 29]
      //Input_0_DepositoryRechargeResponse: {}
      
      GatewayMessageProducer gatewayMessageProducer0 = new GatewayMessageProducer();
      //mock depositoryRechargeResponse0
      DepositoryRechargeResponse depositoryRechargeResponse0 = mock(DepositoryRechargeResponse.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      
      //Call method: personalRecharge
      // Undeclared exception!
      try { 
        gatewayMessageProducer0.personalRecharge(depositoryRechargeResponse0);
      } catch(Throwable e) {
         verifyException("com.wanxin.depository.message.GatewayMessageProducer", e);
         assertEquals("java.lang.NullPointerException", e.getClass().getName());
      }
  }

  @Test(timeout = 9000)
  public void test_personalRegister_1()  throws Throwable  {
      //caseID:9112a340fa84c7a7390162c64b3641ce
      //CoveredLines: [20, 33]
      //Input_0_DepositoryConsumerResponse: {}
      
      GatewayMessageProducer gatewayMessageProducer0 = new GatewayMessageProducer();
      //mock depositoryConsumerResponse0
      DepositoryConsumerResponse depositoryConsumerResponse0 = mock(DepositoryConsumerResponse.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      
      //Call method: personalRegister
      // Undeclared exception!
      try { 
        gatewayMessageProducer0.personalRegister(depositoryConsumerResponse0);
      } catch(Throwable e) {
         verifyException("com.wanxin.depository.message.GatewayMessageProducer", e);
         assertEquals("java.lang.NullPointerException", e.getClass().getName());
      }
  }

  @Test(timeout = 9000)
  public void test_personalWithdraw_2()  throws Throwable  {
      //caseID:d34a189d327ed73555494c0b7bdc0155
      //CoveredLines: [20, 25]
      //Input_0_DepositoryWithdrawResponse: {}
      
      GatewayMessageProducer gatewayMessageProducer0 = new GatewayMessageProducer();
      //mock depositoryWithdrawResponse0
      DepositoryWithdrawResponse depositoryWithdrawResponse0 = mock(DepositoryWithdrawResponse.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      
      //Call method: personalWithdraw
      // Undeclared exception!
      try { 
        gatewayMessageProducer0.personalWithdraw(depositoryWithdrawResponse0);
      } catch(Throwable e) {
         verifyException("com.wanxin.depository.message.GatewayMessageProducer", e);
         assertEquals("java.lang.NullPointerException", e.getClass().getName());
      }
  }
}
