/*
 * This file was automatically generated by SmartUnit
 */

package sut.com.wanxin.consumer.message;

import org.junit.Test;
import static org.junit.Assert.*;
import java.lang.reflect.Method;
import static org.smartunit.runtime.SmartAssertions.*;
import com.wanxin.consumer.message.GatewayNotifyConsumer;
import org.junit.runner.RunWith;
import org.smartunit.runtime.SmartRunner;
import org.smartunit.runtime.SmartRunnerParameters;

@RunWith(SmartRunner.class) @SmartRunnerParameters(mockJVMNonDeterminism = true, useVNET = true, resetStaticState = true) 
public class GatewayNotifyConsumer_SSTest extends GatewayNotifyConsumer_SSTest_scaffolding {
// allCoveredLines:[33, 34, 35, 36, 37, 40, 69]

  @Test(timeout = 9000)
  public void test_setCurrentTimeMillis_0()  throws Throwable  {
      //caseID:36f741694b1df2a28ba4f490b641735f
      //CoveredLines: [33, 34, 35, 36, 37, 40, 69]
      
      GatewayNotifyConsumer gatewayNotifyConsumer0 = null;
      try {
        gatewayNotifyConsumer0 = new GatewayNotifyConsumer("Fix Offset, {}, remove unnecessary mq, {} Droped: {}", "Fix Offset, {}, remove unnecessary mq, {} Droped: {}");
      } catch(Throwable e) {
         verifyException("org.apache.rocketmq.client.Validators", e);
         assertEquals("org.apache.rocketmq.client.exception.MQClientException", e.getClass().getName());
         assertEquals("the specified group[Fix Offset, {}, remove unnecessary mq, {} Droped: {}] contains illegal characters, allowing only ^[%|a-zA-Z0-9_-]+$\nFor more information, please visit the url, http://rocketmq.apache.org/docs/faq/", e.getMessage());
      }
  }
}
