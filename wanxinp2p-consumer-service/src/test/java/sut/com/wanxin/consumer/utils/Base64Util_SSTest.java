/*
 * This file was automatically generated by SmartUnit
 */

package sut.com.wanxin.consumer.utils;

import org.junit.Test;
import static org.junit.Assert.*;
import java.lang.reflect.Method;
import com.wanxin.consumer.utils.Base64Util;
import org.junit.runner.RunWith;
import org.smartunit.runtime.SmartRunner;
import org.smartunit.runtime.SmartRunnerParameters;

@RunWith(SmartRunner.class) @SmartRunnerParameters(mockJVMNonDeterminism = true, useVNET = true, resetStaticState = true) 
public class Base64Util_SSTest extends Base64Util_SSTest_scaffolding {
// allCoveredLines:[18, 19, 22, 23, 24, 27, 28, 29, 31, 32, 37, 39, 40, 42, 43, 44, 45, 49, 50, 51, 52, 56, 60, 61, 62, 66]

  @Test(timeout = 9000)
  public void test_encode_0()  throws Throwable  {
      //caseID:7faee3f78fea34a0232d5abe114268fc
      //CoveredLines: [18, 19, 22, 23, 24, 27, 28, 29, 31, 32, 37, 39, 40, 42, 43, 44, 45, 49, 50, 51, 52, 56, 60, 66]
      //Input_0_byte[]: byteArray0
      //Assert: assertEquals("peJdAAAA", method_result);
      
      Base64Util base64Util0 = new Base64Util();
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte) (-91);
      byteArray0[1] = (byte) (-30);
      byteArray0[2] = (byte)93;
      
      //Call method: encode
      String string0 = Base64Util.encode(byteArray0);
      
      //Test Result Assert
      assertEquals("peJdAAAA", string0);
  }

  @Test(timeout = 9000)
  public void test_encode_1()  throws Throwable  {
      //caseID:9578315f2c2cccbd9bc41715f55d5f66
      //CoveredLines: [22, 23, 24, 27, 28, 29, 31, 32, 37, 39, 40, 42, 43, 44, 45, 49, 50, 51, 52, 56, 60, 61, 62, 66]
      //Input_0_byte[]: byteArray0
      //Assert: assertEquals("AAAAAAAAAAA=", method_result);
      
      byte[] byteArray0 = new byte[8];
      
      //Call method: encode
      String string0 = Base64Util.encode(byteArray0);
      
      //Test Result Assert
      assertEquals("AAAAAAAAAAA=", string0);
  }

  @Test(timeout = 9000)
  public void test_encode_2()  throws Throwable  {
      //caseID:7dbd66814d1dc35daba140b79ec624c7
      //CoveredLines: [18, 19, 22, 23, 24, 27, 28, 29, 31, 32, 37, 39, 40, 42, 43, 44, 45, 49, 50, 51, 52, 56, 60, 61, 62, 66]
      //Input_0_byte[]: byteArray0
      //Assert: assertEquals("AABApQ==", method_result);
      
      Base64Util base64Util0 = new Base64Util();
      byte[] byteArray0 = new byte[4];
      byteArray0[2] = (byte)64;
      byteArray0[3] = (byte) (-91);
      
      //Call method: encode
      String string0 = Base64Util.encode(byteArray0);
      
      //Test Result Assert
      assertEquals("AABApQ==", string0);
  }
}
