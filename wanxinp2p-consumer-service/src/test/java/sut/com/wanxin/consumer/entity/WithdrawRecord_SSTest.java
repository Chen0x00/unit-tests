/*
 * This file was automatically generated by SmartUnit
 */

package sut.com.wanxin.consumer.entity;

import org.junit.Test;
import static org.junit.Assert.*;
import java.lang.reflect.Method;
import static org.smartunit.shaded.org.mockito.Mockito.*;
import org.smartunit.shaded.org.mockito.ArgumentMatchers;
import com.wanxin.consumer.entity.WithdrawRecord;
import java.math.BigDecimal;
import java.time.LocalDateTime;
import java.time.ZoneId;
import java.time.ZoneOffset;
import org.junit.runner.RunWith;
import org.smartunit.runtime.ExecutorServiceAnswer;
import org.smartunit.runtime.PrivateAccess;
import org.smartunit.runtime.SmartRunner;
import org.smartunit.runtime.SmartRunnerParameters;
import org.smartunit.runtime.TransactionTemplateAnswer;
import org.smartunit.runtime.ViolatedAssumptionAnswer;
import org.smartunit.runtime.mock.java.time.MockLocalDateTime;

@RunWith(SmartRunner.class) @SmartRunnerParameters(mockJVMNonDeterminism = true, useVNET = true, resetStaticState = true) 
public class WithdrawRecord_SSTest extends WithdrawRecord_SSTest_scaffolding {
// allCoveredLines:[22, 32, 38, 44, 50, 56, 62, 68, 74]

  @Test(timeout = 9000)
  public void test_equals_00()  throws Throwable  {
      //caseID:2853248f0cdbaa2603c200a47913580b
      //CoveredLines: [22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 62]
      //Input_0_Object: object0
      //Assert: assertFalse(method_result);
      
      WithdrawRecord withdrawRecord0 = new WithdrawRecord();
      
      withdrawRecord0.getCreateDate();
      Object object0 = new Object();
      
      //Call method: equals
      boolean boolean0 = withdrawRecord0.equals(object0);
      
      //Test Result Assert
      assertFalse(boolean0);
  }

  @Test(timeout = 9000)
  public void test_equals_01()  throws Throwable  {
      //caseID:e59a091442d79cf10863881529216ee5
      //CoveredLines: [22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 62]
      //Input_0_Object: withdrawRecord0
      //Assert: assertTrue(method_result);
      
      WithdrawRecord withdrawRecord0 = new WithdrawRecord();
      
      withdrawRecord0.getCreateDate();
      
      //Call method: equals
      boolean boolean0 = withdrawRecord0.equals(withdrawRecord0);
      
      //Test Result Assert
      assertTrue(boolean0);
  }

  @Test(timeout = 9000)
  public void test_equals_02()  throws Throwable  {
      //caseID:408b8a2ecb314325365bdbb3f1adcf61
      //CoveredLines: [22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 32, 62]
      //Input_0_Object: withdrawRecord0
      //Assert: assertFalse(method_result);
      
      WithdrawRecord withdrawRecord0 = new WithdrawRecord();
      Long long0 = new Long(426);
      
      withdrawRecord0.getCreateDate();
      
      PrivateAccess.setVariable((Class<?>) WithdrawRecord.class, withdrawRecord0, "id", (Object) long0);
      WithdrawRecord withdrawRecord1 = new WithdrawRecord();
      
      //Call method: equals
      boolean boolean0 = withdrawRecord1.equals(withdrawRecord0);
      
      //Test Result Assert
      assertFalse(boolean0);
  }

  @Test(timeout = 9000)
  public void test_equals_03()  throws Throwable  {
      //caseID:caed10d886319a5d3586823a6318cc89
      //CoveredLines: [22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 32, 62]
      //Input_0_Object: withdrawRecord1
      //Assert: assertFalse(method_result);
      
      WithdrawRecord withdrawRecord0 = new WithdrawRecord();
      Long long0 = new Long(447);
      
      withdrawRecord0.getCreateDate();
      
      PrivateAccess.setVariable((Class<?>) WithdrawRecord.class, withdrawRecord0, "id", (Object) long0);
      WithdrawRecord withdrawRecord1 = new WithdrawRecord();
      
      //Call method: equals
      boolean boolean0 = withdrawRecord0.equals(withdrawRecord1);
      
      //Test Result Assert
      assertFalse(boolean0);
  }

  @Test(timeout = 9000)
  public void test_equals_04()  throws Throwable  {
      //caseID:34298df95521ecbce63a2eb7eeb7c0ba
      //CoveredLines: [22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 32, 38, 44, 50, 56, 62, 68, 74]
      //Input_0_Object: {}
      //Assert: assertTrue(method_result);
      
      //mock withdrawRecord0
      WithdrawRecord withdrawRecord0 = mock(WithdrawRecord.class, CALLS_REAL_METHODS);
      WithdrawRecord withdrawRecord1 = new WithdrawRecord();
      
      //Call method: equals
      boolean boolean0 = withdrawRecord1.equals(withdrawRecord0);
      
      //Test Result Assert
      assertTrue(boolean0);
  }

  @Test(timeout = 9000)
  public void test_hashCode_05()  throws Throwable  {
      //caseID:2ca076a04c259b8ab3db24b2f99d4f9f
      //CoveredLines: [22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 32, 38, 44, 50, 56, 62, 68, 74]
      
      WithdrawRecord withdrawRecord0 = new WithdrawRecord();
      
      withdrawRecord0.getCreateDate();
      
      //Call method: hashCode
      withdrawRecord0.hashCode();
  }

  @Test(timeout = 9000)
  public void test_hashCode_06()  throws Throwable  {
      //caseID:1b50688f2f9fa02c91f763e787c2f470
      //CoveredLines: [22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 32, 38, 44, 50, 56, 62, 68, 74]
      
      WithdrawRecord withdrawRecord0 = new WithdrawRecord();
      
      //Call method: hashCode
      withdrawRecord0.hashCode();
  }

  @Test(timeout = 9000)
  public void test_setAmount_07()  throws Throwable  {
      //caseID:e83f4f685f1410d3a22a58d15b7ea941
      //CoveredLines: [22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 62]
      //Input_0_BigDecimal: (-1117.122)
      
      WithdrawRecord withdrawRecord0 = new WithdrawRecord();
      BigDecimal bigDecimal0 = new BigDecimal((-1117.122));
      
      withdrawRecord0.getCreateDate();
      
      //Call method: setAmount
      withdrawRecord0.setAmount(bigDecimal0);
      
      //Test Result Assert
      assertNull(withdrawRecord0.getCallbackStatus());
  }

  @Test(timeout = 9000)
  public void test_setCallbackStatus_08()  throws Throwable  {
      //caseID:fc2b8edd86615f53f6d12593f70c37a7
      //CoveredLines: [22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 62]
      //Input_0_Integer: 43
      
      WithdrawRecord withdrawRecord0 = new WithdrawRecord();
      Integer integer0 = new Integer(43);
      
      withdrawRecord0.getCreateDate();
      
      //Call method: setCallbackStatus
      withdrawRecord0.setCallbackStatus(integer0);
      
      //Test Result Assert
      assertEquals(43, (int)withdrawRecord0.getCallbackStatus());
  }

  @Test(timeout = 9000)
  public void test_setCommission_09()  throws Throwable  {
      //caseID:140bce3c964cf05244ee621452d0f77d
      //CoveredLines: [22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22]
      //Input_0_BigDecimal: BigDecimal.ONE
      
      WithdrawRecord withdrawRecord0 = new WithdrawRecord();
      BigDecimal bigDecimal0 = BigDecimal.ONE;
      
      //Call method: setCommission
      withdrawRecord0.setCommission(bigDecimal0);
      
      //Test Result Assert
      assertNull(withdrawRecord0.getCallbackStatus());
  }

  @Test(timeout = 9000)
  public void test_setConsumerId_10()  throws Throwable  {
      //caseID:913b30372b92ee4412d58347c9c25fe4
      //CoveredLines: [22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 62]
      //Input_0_Long: 5054L
      
      WithdrawRecord withdrawRecord0 = new WithdrawRecord();
      Long long0 = new Long(5054L);
      
      withdrawRecord0.getCreateDate();
      
      //Call method: setConsumerId
      withdrawRecord0.setConsumerId(long0);
      
      //Test Result Assert
      assertEquals(5054L, (long)withdrawRecord0.getConsumerId());
  }

  @Test(timeout = 9000)
  public void test_setCreateDate_11()  throws Throwable  {
      //caseID:19736385314a64b38cacb0caeb30a09a
      //CoveredLines: [22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22]
      //Input_0_LocalDateTime: localDateTime0
      
      WithdrawRecord withdrawRecord0 = new WithdrawRecord();
      ZoneOffset zoneOffset0 = ZoneOffset.UTC;
      
      LocalDateTime localDateTime0 = MockLocalDateTime.now((ZoneId) zoneOffset0);
      
      //Call method: setCreateDate
      withdrawRecord0.setCreateDate(localDateTime0);
      
      //Test Result Assert
      assertNull(withdrawRecord0.getUserNo());
  }

  @Test(timeout = 9000)
  public void test_setId_12()  throws Throwable  {
      //caseID:d821180dee2f8fbe2f88490029e7de62
      //CoveredLines: [22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 62]
      //Input_0_Long: 0L
      
      WithdrawRecord withdrawRecord0 = new WithdrawRecord();
      Long long0 = new Long(0L);
      
      withdrawRecord0.getCreateDate();
      
      //Call method: setId
      withdrawRecord0.setId(long0);
      
      //Test Result Assert
      assertNull(withdrawRecord0.getConsumerId());
  }

  @Test(timeout = 9000)
  public void test_setRequestNo_13()  throws Throwable  {
      //caseID:c96e261b8972a909af52aedb2da17459
      //CoveredLines: [22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22]
      //Input_0_String: 43
      
      WithdrawRecord withdrawRecord0 = new WithdrawRecord();
      
      //Call method: setRequestNo
      withdrawRecord0.setRequestNo("43");
      
      //Test Result Assert
      assertNull(withdrawRecord0.getUserNo());
  }

  @Test(timeout = 9000)
  public void test_setUserNo_14()  throws Throwable  {
      //caseID:ce6b7f630769280c0a85ddaf1ca3dac5
      //CoveredLines: [22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22]
      //Input_0_String: Djm2igsgom
      
      WithdrawRecord withdrawRecord0 = new WithdrawRecord();
      
      //Call method: setUserNo
      withdrawRecord0.setUserNo("Djm2igsgom");
      
      //Test Result Assert
      assertNull(withdrawRecord0.getCallbackStatus());
  }

  @Test(timeout = 9000)
  public void test_toString_15()  throws Throwable  {
      //caseID:e57939372f420fa3fae4753dc46a1d90
      //CoveredLines: [22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 32, 38, 44, 50, 56, 62, 68, 74]
      //Assert: assertEquals("WithdrawRecord(id=null, consumerId=null, userNo=null, amount=null, commission=null, createDate=null, requestNo=null, callbackStatus=null)", method_result);
      
      WithdrawRecord withdrawRecord0 = new WithdrawRecord();
      
      //Call method: toString
      String string0 = withdrawRecord0.toString();
      
      //Test Result Assert
      assertEquals("WithdrawRecord(id=null, consumerId=null, userNo=null, amount=null, commission=null, createDate=null, requestNo=null, callbackStatus=null)", string0);
  }
}
