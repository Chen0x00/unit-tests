/*
 * This file was automatically generated by SmartUnit
 */

package sut.com.wanxin.consumer.entity;

import org.junit.Test;
import static org.junit.Assert.*;
import java.lang.reflect.Method;
import com.wanxin.consumer.entity.Consumer;
import java.math.BigDecimal;
import org.junit.runner.RunWith;
import org.smartunit.runtime.SmartRunner;
import org.smartunit.runtime.SmartRunnerParameters;

@RunWith(SmartRunner.class) @SmartRunnerParameters(mockJVMNonDeterminism = true, useVNET = true, resetStaticState = true) 
public class Consumer_SSTest extends Consumer_SSTest_scaffolding {
// allCoveredLines:[17, 27, 33, 39, 45, 51, 57, 63, 69, 75, 81, 87, 93, 99, 105]

  @Test(timeout = 9000)
  public void test_equals_00()  throws Throwable  {
      //caseID:f7781450fa2a01581daf964bdf2c96cd
      //CoveredLines: [17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17]
      //Input_0_Object: -G.ef1^ERL1%Shw/
      //Assert: assertFalse(method_result);
      
      Consumer consumer0 = new Consumer();
      
      //Call method: equals
      boolean boolean0 = consumer0.equals("-G.ef1^ERL1%Shw/");
      
      //Test Result Assert
      assertFalse(boolean0);
  }

  @Test(timeout = 9000)
  public void test_equals_01()  throws Throwable  {
      //caseID:400a3d0011d6abab05229597695b18f1
      //CoveredLines: [17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17]
      //Input_0_Object: consumer0
      //Assert: assertTrue(method_result);
      
      Consumer consumer0 = new Consumer();
      
      //Call method: equals
      boolean boolean0 = consumer0.equals(consumer0);
      
      //Test Result Assert
      assertTrue(boolean0);
  }

  @Test(timeout = 9000)
  public void test_equals_02()  throws Throwable  {
      //caseID:364f6417cd2134e308b4b5e5f9c8b9f4
      //CoveredLines: [17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 27, 33, 39, 45, 51, 57, 63, 69, 75, 81, 87, 93, 99, 105]
      //Input_0_Object: consumer0
      //Assert: assertTrue(method_result);
      
      Consumer consumer0 = new Consumer();
      Consumer consumer1 = new Consumer();
      
      //Call method: equals
      boolean boolean0 = consumer1.equals(consumer0);
      
      //Test Result Assert
      assertTrue(boolean0);
  }

  @Test(timeout = 9000)
  public void test_equals_03()  throws Throwable  {
      //caseID:7204c583354fd87927ee3b0ce0365065
      //CoveredLines: [17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 27, 33, 39, 45, 51, 57, 63, 69, 75, 81, 87, 93, 99, 105]
      //Input_0_Object: consumer1
      //Assert: assertTrue(method_result);
      
      Consumer consumer0 = new Consumer();
      Consumer consumer1 = new Consumer();
      
      //Call method: equals
      boolean boolean0 = consumer0.equals(consumer1);
      
      //Test Result Assert
      assertTrue(boolean0);
  }

  @Test(timeout = 9000)
  public void test_hashCode_04()  throws Throwable  {
      //caseID:0ab12330dbf5c5ad5c0a8b91075eb1ed
      //CoveredLines: [17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 27, 33, 39, 45, 51, 57, 63, 69, 75, 81, 87, 93, 99, 105]
      
      Consumer consumer0 = new Consumer();
      
      //Call method: hashCode
      consumer0.hashCode();
  }

  @Test(timeout = 9000)
  public void test_setAuthList_05()  throws Throwable  {
      //caseID:9c0b0019a7fb37719b91524c3fad0961
      //CoveredLines: [17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17]
      //Input_0_String: 59
      
      Consumer consumer0 = new Consumer();
      
      //Call method: setAuthList
      consumer0.setAuthList("59");
      
      //Test Result Assert
      assertNull(consumer0.getIsCardAuth());
  }

  @Test(timeout = 9000)
  public void test_setFullname_06()  throws Throwable  {
      //caseID:15ac050965a4567063f71fd178f81a5f
      //CoveredLines: [17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17]
      //Input_0_String: 
      
      Consumer consumer0 = new Consumer();
      
      //Call method: setFullname
      consumer0.setFullname("");
      
      //Test Result Assert
      assertNull(consumer0.getRequestNo());
  }

  @Test(timeout = 9000)
  public void test_setId_07()  throws Throwable  {
      //caseID:df6af79f5b8e1f4df3859e4fd770f9aa
      //CoveredLines: [17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17]
      //Input_0_Long: 2194L
      
      Consumer consumer0 = new Consumer();
      Long long0 = new Long(2194L);
      
      //Call method: setId
      consumer0.setId(long0);
      
      //Test Result Assert
      assertNull(consumer0.getUsername());
  }

  @Test(timeout = 9000)
  public void test_setIdNumber_08()  throws Throwable  {
      //caseID:32cd1026843fd77a9d410cd5a3416573
      //CoveredLines: [17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17]
      //Input_0_String: [2br;BMNYkk;kO)^d
      
      Consumer consumer0 = new Consumer();
      
      //Call method: setIdNumber
      consumer0.setIdNumber("[2br;BMNYkk;kO)^d");
      
      //Test Result Assert
      assertNull(consumer0.getUsername());
  }

  @Test(timeout = 9000)
  public void test_setIsBindCard_09()  throws Throwable  {
      //caseID:5a2bf6e53521094c55bf28e6823bac2a
      //CoveredLines: [17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17]
      //Input_0_Integer: 0
      
      Consumer consumer0 = new Consumer();
      Integer integer0 = new Integer(0);
      
      //Call method: setIsBindCard
      consumer0.setIsBindCard(integer0);
      
      //Test Result Assert
      assertNull(consumer0.getIdNumber());
  }

  @Test(timeout = 9000)
  public void test_setIsCardAuth_10()  throws Throwable  {
      //caseID:3dafd9643af422facd32088e227cd624
      //CoveredLines: [17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17]
      //Input_0_Integer: 0
      
      Consumer consumer0 = new Consumer();
      Integer integer0 = new Integer(0);
      
      //Call method: setIsCardAuth
      consumer0.setIsCardAuth(integer0);
      
      //Test Result Assert
      assertNull(consumer0.getUsername());
  }

  @Test(timeout = 9000)
  public void test_setLoanAmount_11()  throws Throwable  {
      //caseID:0b115a0025000cc2d8afdd39beac704a
      //CoveredLines: [17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17]
      //Input_0_BigDecimal: BigDecimal.ONE
      
      Consumer consumer0 = new Consumer();
      BigDecimal bigDecimal0 = BigDecimal.ONE;
      
      //Call method: setLoanAmount
      consumer0.setLoanAmount(bigDecimal0);
      
      //Test Result Assert
      assertNull(consumer0.getRole());
  }

  @Test(timeout = 9000)
  public void test_setMobile_12()  throws Throwable  {
      //caseID:573614298b305db73ff09981b431f2fd
      //CoveredLines: [17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17]
      //Input_0_String: , idNumber=
      
      Consumer consumer0 = new Consumer();
      
      //Call method: setMobile
      consumer0.setMobile(", idNumber=");
      
      //Test Result Assert
      assertNull(consumer0.getIsCardAuth());
  }

  @Test(timeout = 9000)
  public void test_setRequestNo_13()  throws Throwable  {
      //caseID:d5981581abb4244e3c07b1886b4e67cc
      //CoveredLines: [17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17]
      //Input_0_String: NgHiRm_RNJ
      
      Consumer consumer0 = new Consumer();
      
      //Call method: setRequestNo
      consumer0.setRequestNo("NgHiRm_RNJ");
      
      //Test Result Assert
      assertEquals("NgHiRm_RNJ", consumer0.getRequestNo());
  }

  @Test(timeout = 9000)
  public void test_setRole_14()  throws Throwable  {
      //caseID:db732c55b053c1ede03eb649ab4f524a
      //CoveredLines: [17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17]
      //Input_0_String: , userNo=
      
      Consumer consumer0 = new Consumer();
      
      //Call method: setRole
      consumer0.setRole(", userNo=");
      
      //Test Result Assert
      assertNull(consumer0.getIdNumber());
  }

  @Test(timeout = 9000)
  public void test_setStatus_15()  throws Throwable  {
      //caseID:140f5b5d05384b0c1d2b3a6cb82da7b2
      //CoveredLines: [17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17]
      //Input_0_Integer: 1
      
      Consumer consumer0 = new Consumer();
      Integer integer0 = new Integer(1);
      
      //Call method: setStatus
      consumer0.setStatus(integer0);
      
      //Test Result Assert
      assertNull(consumer0.getUsername());
  }

  @Test(timeout = 9000)
  public void test_setUserNo_16()  throws Throwable  {
      //caseID:38e7341ea24021c8387f071553127f4d
      //CoveredLines: [17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17]
      //Input_0_String: 1
      
      Consumer consumer0 = new Consumer();
      
      //Call method: setUserNo
      consumer0.setUserNo("1");
      
      //Test Result Assert
      assertNull(consumer0.getUserType());
  }

  @Test(timeout = 9000)
  public void test_setUserType_17()  throws Throwable  {
      //caseID:f814f61b04449e41c5602111cbcc6e84
      //CoveredLines: [17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17]
      //Input_0_String: 43
      
      Consumer consumer0 = new Consumer();
      
      //Call method: setUserType
      consumer0.setUserType("43");
      
      //Test Result Assert
      assertEquals("43", consumer0.getUserType());
  }

  @Test(timeout = 9000)
  public void test_setUsername_18()  throws Throwable  {
      //caseID:413f51e8c9ea78d6ddc14fe8b54f3a38
      //CoveredLines: [17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17]
      //Input_0_String: , isCardAuth=
      
      Consumer consumer0 = new Consumer();
      
      //Call method: setUsername
      consumer0.setUsername(", isCardAuth=");
      
      //Test Result Assert
      assertNull(consumer0.getRequestNo());
  }

  @Test(timeout = 9000)
  public void test_toString_19()  throws Throwable  {
      //caseID:e1adfa80cfce640ad8c58ea608e84fe9
      //CoveredLines: [17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 27, 33, 39, 45, 51, 57, 63, 69, 75, 81, 87, 93, 99, 105]
      //Assert: assertEquals("Consumer(id=null, username=null, fullname=null, idNumber=null, userNo=null, mobile=null, userType=null, role=null, authList=null, isBindCard=null, status=null, isCardAuth=null, loanAmount=null, requestNo=null)", method_result);
      
      Consumer consumer0 = new Consumer();
      
      //Call method: toString
      String string0 = consumer0.toString();
      
      //Test Result Assert
      assertEquals("Consumer(id=null, username=null, fullname=null, idNumber=null, userNo=null, mobile=null, userType=null, role=null, authList=null, isBindCard=null, status=null, isCardAuth=null, loanAmount=null, requestNo=null)", string0);
  }
}
