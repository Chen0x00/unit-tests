/*
 * This file was automatically generated by SmartUnit
 */

package sut.com.wanxin.api.repayment.model;

import org.junit.Test;
import static org.junit.Assert.*;
import java.lang.reflect.Method;
import com.wanxin.api.repayment.model.RepaymentDetailRequest;
import com.wanxin.api.repayment.model.RepaymentRequest;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;
import org.junit.runner.RunWith;
import org.smartunit.runtime.SmartRunner;
import org.smartunit.runtime.SmartRunnerParameters;

@RunWith(SmartRunner.class) @SmartRunnerParameters(mockJVMNonDeterminism = true, useVNET = true, resetStaticState = true) 
public class RepaymentRequest_SSTest extends RepaymentRequest_SSTest_scaffolding {
// allCoveredLines:[18, 23, 26, 29, 32, 35, 38, 41]

  @Test(timeout = 9000)
  public void test_equals_00()  throws Throwable  {
      //caseID:92662cdbb19167fda55cac692019490f
      //CoveredLines: [18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18]
      //Input_0_Object: repaymentRequest0
      //Assert: assertTrue(method_result);
      
      RepaymentRequest repaymentRequest0 = new RepaymentRequest();
      
      //Call method: equals
      boolean boolean0 = repaymentRequest0.equals(repaymentRequest0);
      
      //Test Result Assert
      assertTrue(boolean0);
  }

  @Test(timeout = 9000)
  public void test_equals_01()  throws Throwable  {
      //caseID:cfceefe12ff8ec76b855e48ab9c5ab1d
      //CoveredLines: [18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18]
      //Input_0_Object: 
      //Assert: assertFalse(method_result);
      
      RepaymentRequest repaymentRequest0 = new RepaymentRequest();
      
      //Call method: equals
      boolean boolean0 = repaymentRequest0.equals("");
      
      //Test Result Assert
      assertFalse(boolean0);
  }

  @Test(timeout = 9000)
  public void test_equals_02()  throws Throwable  {
      //caseID:f441b64f9c645725d03a6660d0514333
      //CoveredLines: [18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 23, 26, 29, 32, 35, 38, 41]
      //Input_0_Object: repaymentRequest1
      //Assert: assertTrue(method_result);
      
      RepaymentRequest repaymentRequest0 = new RepaymentRequest();
      RepaymentRequest repaymentRequest1 = new RepaymentRequest();
      
      //Call method: equals
      boolean boolean0 = repaymentRequest0.equals(repaymentRequest1);
      
      //Test Result Assert
      assertTrue(boolean0);
  }

  @Test(timeout = 9000)
  public void test_hashCode_03()  throws Throwable  {
      //caseID:d5d2fd6f74e103644eda489110688839
      //CoveredLines: [18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 23, 26, 29, 32, 35, 38, 41]
      
      RepaymentRequest repaymentRequest0 = new RepaymentRequest();
      
      //Call method: hashCode
      repaymentRequest0.hashCode();
  }

  @Test(timeout = 9000)
  public void test_setAmount_04()  throws Throwable  {
      //caseID:e85c736d7f85593f4c6cd28d52e7f5e8
      //CoveredLines: [18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18]
      //Input_0_BigDecimal: BigDecimal.ZERO
      
      RepaymentRequest repaymentRequest0 = new RepaymentRequest();
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      
      //Call method: setAmount
      repaymentRequest0.setAmount(bigDecimal0);
      
      //Test Result Assert
      assertNull(repaymentRequest0.getRequestNo());
  }

  @Test(timeout = 9000)
  public void test_setCommission_05()  throws Throwable  {
      //caseID:95c712791f760a0bc8d71fd2596a871d
      //CoveredLines: [18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18]
      //Input_0_BigDecimal: BigDecimal.ONE
      
      RepaymentRequest repaymentRequest0 = new RepaymentRequest();
      BigDecimal bigDecimal0 = BigDecimal.ONE;
      
      //Call method: setCommission
      repaymentRequest0.setCommission(bigDecimal0);
      
      //Test Result Assert
      assertNull(repaymentRequest0.getRequestNo());
  }

  @Test(timeout = 9000)
  public void test_setDetails_06()  throws Throwable  {
      //caseID:e09ac625f7271797a8e74b274e829756
      //CoveredLines: [18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18]
      //Input_0_List<RepaymentDetailRequest>: arrayList0
      
      RepaymentRequest repaymentRequest0 = new RepaymentRequest();
      ArrayList<RepaymentDetailRequest> arrayList0 = new ArrayList<RepaymentDetailRequest>();
      
      //Call method: setDetails
      repaymentRequest0.setDetails(arrayList0);
      
      //Test Result Assert
      assertNull(repaymentRequest0.getId());
  }

  @Test(timeout = 9000)
  public void test_setId_07()  throws Throwable  {
      //caseID:259b8f75314036e98f857962e7878d2e
      //CoveredLines: [18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18]
      //Input_0_Long: 1L
      
      RepaymentRequest repaymentRequest0 = new RepaymentRequest();
      Long long0 = new Long(1L);
      
      //Call method: setId
      repaymentRequest0.setId(long0);
      
      //Test Result Assert
      assertNull(repaymentRequest0.getRequestNo());
  }

  @Test(timeout = 9000)
  public void test_setPreRequestNo_08()  throws Throwable  {
      //caseID:c16277ef04d64ca1dc6442b7493c2290
      //CoveredLines: [18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18]
      //Input_0_String: )
      
      RepaymentRequest repaymentRequest0 = new RepaymentRequest();
      
      //Call method: setPreRequestNo
      repaymentRequest0.setPreRequestNo(")");
      
      //Test Result Assert
      assertNull(repaymentRequest0.getId());
  }

  @Test(timeout = 9000)
  public void test_setProjectNo_09()  throws Throwable  {
      //caseID:b6c77c8f2b85f86e15d6a4a023d54e06
      //CoveredLines: [18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18]
      //Input_0_String: Zug
      
      RepaymentRequest repaymentRequest0 = new RepaymentRequest();
      
      //Call method: setProjectNo
      repaymentRequest0.setProjectNo("Zug");
      
      //Test Result Assert
      assertNull(repaymentRequest0.getRequestNo());
  }

  @Test(timeout = 9000)
  public void test_setRequestNo_10()  throws Throwable  {
      //caseID:9456c1695c44b070f8e0892f9d04e802
      //CoveredLines: [18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18]
      //Input_0_String: ^
      
      RepaymentRequest repaymentRequest0 = new RepaymentRequest();
      
      //Call method: setRequestNo
      repaymentRequest0.setRequestNo("^");
      
      //Test Result Assert
      assertNull(repaymentRequest0.getId());
  }

  @Test(timeout = 9000)
  public void test_toString_11()  throws Throwable  {
      //caseID:10bf5a519f0519b12b2777f622d37a65
      //CoveredLines: [18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 23, 26, 29, 32, 35, 38, 41]
      //Assert: assertEquals("RepaymentRequest(requestNo=null, preRequestNo=null, projectNo=null, commission=null, details=null, id=null, amount=null)", method_result);
      
      RepaymentRequest repaymentRequest0 = new RepaymentRequest();
      
      //Call method: toString
      String string0 = repaymentRequest0.toString();
      
      //Test Result Assert
      assertEquals("RepaymentRequest(requestNo=null, preRequestNo=null, projectNo=null, commission=null, details=null, id=null, amount=null)", string0);
  }
}
