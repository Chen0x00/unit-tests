/*
 * This file was automatically generated by SmartUnit
 */

package sut.com.wanxin.api.consumer.model;

import org.junit.Test;
import static org.junit.Assert.*;
import java.lang.reflect.Method;
import com.wanxin.api.consumer.model.BalanceDetailsDTO;
import java.math.BigDecimal;
import org.junit.runner.RunWith;
import org.smartunit.runtime.SmartRunner;
import org.smartunit.runtime.SmartRunnerParameters;

@RunWith(SmartRunner.class) @SmartRunnerParameters(mockJVMNonDeterminism = true, useVNET = true, resetStaticState = true) 
public class BalanceDetailsDTO_SSTest extends BalanceDetailsDTO_SSTest_scaffolding {
// allCoveredLines:[19, 27, 30, 33, 36, 39]

  @Test(timeout = 9000)
  public void test_equals_00()  throws Throwable  {
      //caseID:77069f429cb0ebc8efd5b9404353b936
      //CoveredLines: [19, 19, 19, 19, 19, 19, 19, 19, 19, 19]
      //Input_0_Object: balanceDetailsDTO0
      //Assert: assertTrue(method_result);
      
      BalanceDetailsDTO balanceDetailsDTO0 = new BalanceDetailsDTO();
      
      //Call method: equals
      boolean boolean0 = balanceDetailsDTO0.equals(balanceDetailsDTO0);
      
      //Test Result Assert
      assertTrue(boolean0);
  }

  @Test(timeout = 9000)
  public void test_equals_01()  throws Throwable  {
      //caseID:7ef05f876648d871305a1acf128f58c2
      //CoveredLines: [19, 19, 19, 19, 19, 19, 19, 19, 19, 19]
      //Input_0_Object: BigDecimal.ZERO
      //Assert: assertFalse(method_result);
      
      BalanceDetailsDTO balanceDetailsDTO0 = new BalanceDetailsDTO();
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      
      //Call method: equals
      boolean boolean0 = balanceDetailsDTO0.equals(bigDecimal0);
      
      //Test Result Assert
      assertFalse(boolean0);
  }

  @Test(timeout = 9000)
  public void test_equals_02()  throws Throwable  {
      //caseID:f23c0422fd3517548a1fc839a8a39b80
      //CoveredLines: [19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 27, 30, 33, 36, 39]
      //Input_0_Object: balanceDetailsDTO0
      //Assert: assertTrue(method_result);
      
      BalanceDetailsDTO balanceDetailsDTO0 = new BalanceDetailsDTO();
      BalanceDetailsDTO balanceDetailsDTO1 = new BalanceDetailsDTO();
      
      //Call method: equals
      boolean boolean0 = balanceDetailsDTO1.equals(balanceDetailsDTO0);
      
      //Test Result Assert
      assertTrue(boolean0);
  }

  @Test(timeout = 9000)
  public void test_equals_03()  throws Throwable  {
      //caseID:89c0ac29f5404d379417dd9ce425210b
      //CoveredLines: [19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 27, 30, 33, 36, 39]
      //Input_0_Object: balanceDetailsDTO1
      //Assert: assertTrue(method_result);
      
      BalanceDetailsDTO balanceDetailsDTO0 = new BalanceDetailsDTO();
      BalanceDetailsDTO balanceDetailsDTO1 = new BalanceDetailsDTO();
      
      //Call method: equals
      boolean boolean0 = balanceDetailsDTO0.equals(balanceDetailsDTO1);
      
      //Test Result Assert
      assertTrue(boolean0);
  }

  @Test(timeout = 9000)
  public void test_hashCode_04()  throws Throwable  {
      //caseID:df50fe2a0d47905525aa566ab1d9d612
      //CoveredLines: [19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 27, 30, 33, 36, 39]
      
      BalanceDetailsDTO balanceDetailsDTO0 = new BalanceDetailsDTO();
      
      //Call method: hashCode
      balanceDetailsDTO0.hashCode();
  }

  @Test(timeout = 9000)
  public void test_setAppCode_05()  throws Throwable  {
      //caseID:0e617dda8fe08ee69d10c7bd7c0e2aab
      //CoveredLines: [19, 19, 19, 19, 19, 19, 19, 19, 19, 19]
      //Input_0_String: 
      //Assert: assertSame(method_result, balanceDetailsDTO0);
      
      BalanceDetailsDTO balanceDetailsDTO0 = new BalanceDetailsDTO();
      
      //Call method: setAppCode
      BalanceDetailsDTO balanceDetailsDTO1 = balanceDetailsDTO0.setAppCode("");
      
      //Test Result Assert
      assertSame(balanceDetailsDTO1, balanceDetailsDTO0);
  }

  @Test(timeout = 9000)
  public void test_setBalance_06()  throws Throwable  {
      //caseID:326139e9019b7bbfdc0288c43c91bbc1
      //CoveredLines: [19, 19, 19, 19, 19, 19, 19, 19, 19, 19]
      //Input_0_BigDecimal: BigDecimal.ZERO
      //Assert: assertNull(method_result.getChangeType());
      
      BalanceDetailsDTO balanceDetailsDTO0 = new BalanceDetailsDTO();
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      
      //Call method: setBalance
      BalanceDetailsDTO balanceDetailsDTO1 = balanceDetailsDTO0.setBalance(bigDecimal0);
      
      //Test Result Assert
      assertNull(balanceDetailsDTO1.getChangeType());
  }

  @Test(timeout = 9000)
  public void test_setChangeType_07()  throws Throwable  {
      //caseID:b6d2c43b9988f1c8d33387208685ce88
      //CoveredLines: [19, 19, 19, 19, 19, 19, 19, 19, 19, 19]
      //Input_0_Integer: 3
      //Assert: assertNull(method_result.getAppCode());
      
      BalanceDetailsDTO balanceDetailsDTO0 = new BalanceDetailsDTO();
      Integer integer0 = new Integer(3);
      
      //Call method: setChangeType
      BalanceDetailsDTO balanceDetailsDTO1 = balanceDetailsDTO0.setChangeType(integer0);
      
      //Test Result Assert
      assertNull(balanceDetailsDTO1.getAppCode());
  }

  @Test(timeout = 9000)
  public void test_setFreezeAmount_08()  throws Throwable  {
      //caseID:3d34dfb32f022452363ab17ff65c9a5b
      //CoveredLines: [19, 19, 19, 19, 19, 19, 19, 19, 19, 19]
      //Input_0_BigDecimal: BigDecimal.ZERO
      //Assert: assertNull(method_result.getUserNo());
      
      BalanceDetailsDTO balanceDetailsDTO0 = new BalanceDetailsDTO();
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      
      //Call method: setFreezeAmount
      BalanceDetailsDTO balanceDetailsDTO1 = balanceDetailsDTO0.setFreezeAmount(bigDecimal0);
      
      //Test Result Assert
      assertNull(balanceDetailsDTO1.getUserNo());
  }

  @Test(timeout = 9000)
  public void test_setUserNo_09()  throws Throwable  {
      //caseID:2afef9b88d00b89ae718330b1cfe839e
      //CoveredLines: [19, 19, 19, 19, 19, 19, 19, 19, 19, 19]
      //Input_0_String: 
      //Assert: assertNull(method_result.getAppCode());
      
      BalanceDetailsDTO balanceDetailsDTO0 = new BalanceDetailsDTO();
      
      //Call method: setUserNo
      BalanceDetailsDTO balanceDetailsDTO1 = balanceDetailsDTO0.setUserNo("");
      
      //Test Result Assert
      assertNull(balanceDetailsDTO1.getAppCode());
  }

  @Test(timeout = 9000)
  public void test_toString_10()  throws Throwable  {
      //caseID:1c41adbfe62fb2c5a6c2f6634dc2d43f
      //CoveredLines: [19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 27, 30, 33, 36, 39]
      //Assert: assertEquals("BalanceDetailsDTO(userNo=null, changeType=null, freezeAmount=null, balance=null, appCode=null)", method_result);
      
      BalanceDetailsDTO balanceDetailsDTO0 = new BalanceDetailsDTO();
      
      //Call method: toString
      String string0 = balanceDetailsDTO0.toString();
      
      //Test Result Assert
      assertEquals("BalanceDetailsDTO(userNo=null, changeType=null, freezeAmount=null, balance=null, appCode=null)", string0);
  }
}
