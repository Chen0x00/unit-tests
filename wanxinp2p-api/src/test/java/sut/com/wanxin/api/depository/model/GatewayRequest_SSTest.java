/*
 * This file was automatically generated by SmartUnit
 */

package sut.com.wanxin.api.depository.model;

import org.junit.Test;
import static org.junit.Assert.*;
import java.lang.reflect.Method;
import com.wanxin.api.depository.model.GatewayRequest;
import org.junit.runner.RunWith;
import org.smartunit.runtime.SmartRunner;
import org.smartunit.runtime.SmartRunnerParameters;

@RunWith(SmartRunner.class) @SmartRunnerParameters(mockJVMNonDeterminism = true, useVNET = true, resetStaticState = true) 
public class GatewayRequest_SSTest extends GatewayRequest_SSTest_scaffolding {
// allCoveredLines:[13, 18, 21, 24, 27, 30]

  @Test(timeout = 9000)
  public void test_equals_00()  throws Throwable  {
      //caseID:46d5bb122b763d3d04debc8beb9d5530
      //CoveredLines: [13, 13, 13, 13, 13, 13, 13, 13, 13, 13]
      //Input_0_Object: , reqData=
      //Assert: assertFalse(method_result);
      
      GatewayRequest gatewayRequest0 = new GatewayRequest();
      
      //Call method: equals
      boolean boolean0 = gatewayRequest0.equals(", reqData=");
      
      //Test Result Assert
      assertFalse(boolean0);
  }

  @Test(timeout = 9000)
  public void test_equals_01()  throws Throwable  {
      //caseID:a3239e23483dbcf22edc28ade3024238
      //CoveredLines: [13, 13, 13, 13, 13, 13, 13, 13, 13, 13]
      //Input_0_Object: gatewayRequest0
      //Assert: assertTrue(method_result);
      
      GatewayRequest gatewayRequest0 = new GatewayRequest();
      
      //Call method: equals
      boolean boolean0 = gatewayRequest0.equals(gatewayRequest0);
      
      //Test Result Assert
      assertTrue(boolean0);
  }

  @Test(timeout = 9000)
  public void test_equals_02()  throws Throwable  {
      //caseID:80ee46c1c679f9bcf3a894831cd9471d
      //CoveredLines: [13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 18, 21, 24, 27, 30]
      //Input_0_Object: gatewayRequest0
      //Assert: assertTrue(method_result);
      
      GatewayRequest gatewayRequest0 = new GatewayRequest();
      GatewayRequest gatewayRequest1 = new GatewayRequest();
      
      //Call method: equals
      boolean boolean0 = gatewayRequest1.equals(gatewayRequest0);
      
      //Test Result Assert
      assertTrue(boolean0);
  }

  @Test(timeout = 9000)
  public void test_equals_03()  throws Throwable  {
      //caseID:956a2e52c8605f548eb83b36e3f23bf2
      //CoveredLines: [13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 18, 21, 24, 27, 30]
      //Input_0_Object: gatewayRequest1
      //Assert: assertTrue(method_result);
      
      GatewayRequest gatewayRequest0 = new GatewayRequest();
      GatewayRequest gatewayRequest1 = new GatewayRequest();
      
      //Call method: equals
      boolean boolean0 = gatewayRequest0.equals(gatewayRequest1);
      
      //Test Result Assert
      assertTrue(boolean0);
  }

  @Test(timeout = 9000)
  public void test_hashCode_04()  throws Throwable  {
      //caseID:4f6518b3c50b3abeb8a24ada4b7590e3
      //CoveredLines: [13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 18, 21, 24, 27, 30]
      
      GatewayRequest gatewayRequest0 = new GatewayRequest();
      
      //Call method: hashCode
      gatewayRequest0.hashCode();
  }

  @Test(timeout = 9000)
  public void test_setDepositoryUrl_05()  throws Throwable  {
      //caseID:b2241b763950572f23931cb26dfbfd9e
      //CoveredLines: [13, 13, 13, 13, 13, 13, 13, 13, 13, 13]
      //Input_0_String: GatewayRequest(serviceName=
      
      GatewayRequest gatewayRequest0 = new GatewayRequest();
      
      //Call method: setDepositoryUrl
      gatewayRequest0.setDepositoryUrl("GatewayRequest(serviceName=");
      
      //Test Result Assert
      assertNull(gatewayRequest0.getServiceName());
  }

  @Test(timeout = 9000)
  public void test_setPlatformNo_06()  throws Throwable  {
      //caseID:c072c0a4934a025acee51262d45b4d11
      //CoveredLines: [13, 13, 13, 13, 13, 13, 13, 13, 13, 13]
      //Input_0_String: 
      
      GatewayRequest gatewayRequest0 = new GatewayRequest();
      
      //Call method: setPlatformNo
      gatewayRequest0.setPlatformNo("");
      
      //Test Result Assert
      assertNull(gatewayRequest0.getSignature());
  }

  @Test(timeout = 9000)
  public void test_setReqData_07()  throws Throwable  {
      //caseID:c488cd166a1503cda3c4a4614edafef9
      //CoveredLines: [13, 13, 13, 13, 13, 13, 13, 13, 13, 13]
      //Input_0_String: 3
      
      GatewayRequest gatewayRequest0 = new GatewayRequest();
      
      //Call method: setReqData
      gatewayRequest0.setReqData("3");
      
      //Test Result Assert
      assertNull(gatewayRequest0.getDepositoryUrl());
  }

  @Test(timeout = 9000)
  public void test_setServiceName_08()  throws Throwable  {
      //caseID:10d34e0633fc13b43a86680256f91b6d
      //CoveredLines: [13, 13, 13, 13, 13, 13, 13, 13, 13, 13]
      //Input_0_String: 
      
      GatewayRequest gatewayRequest0 = new GatewayRequest();
      
      //Call method: setServiceName
      gatewayRequest0.setServiceName("");
      
      //Test Result Assert
      assertNull(gatewayRequest0.getReqData());
  }

  @Test(timeout = 9000)
  public void test_setSignature_09()  throws Throwable  {
      //caseID:6a5a815529f2c06b12af40aed5b2612f
      //CoveredLines: [13, 13, 13, 13, 13, 13, 13, 13, 13, 13]
      //Input_0_String: , platformNo=
      
      GatewayRequest gatewayRequest0 = new GatewayRequest();
      
      //Call method: setSignature
      gatewayRequest0.setSignature(", platformNo=");
      
      //Test Result Assert
      assertNull(gatewayRequest0.getPlatformNo());
  }

  @Test(timeout = 9000)
  public void test_toString_10()  throws Throwable  {
      //caseID:b4cd6c8f490562031992b30f05d71ab9
      //CoveredLines: [13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 18, 21, 24, 27, 30]
      //Assert: assertEquals("GatewayRequest(serviceName=null, platformNo=null, reqData=null, signature=null, depositoryUrl=null)", method_result);
      
      GatewayRequest gatewayRequest0 = new GatewayRequest();
      
      //Call method: toString
      String string0 = gatewayRequest0.toString();
      
      //Test Result Assert
      assertEquals("GatewayRequest(serviceName=null, platformNo=null, reqData=null, signature=null, depositoryUrl=null)", string0);
  }
}
