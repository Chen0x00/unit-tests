/*
 * This file was automatically generated by SmartUnit
 */

package sut.com.wanxin.api.depository.model;

import org.junit.Test;
import static org.junit.Assert.*;
import java.lang.reflect.Method;
import com.wanxin.api.depository.model.ProjectRequestDataDTO;
import java.math.BigDecimal;
import org.junit.runner.RunWith;
import org.smartunit.runtime.SmartRunner;
import org.smartunit.runtime.SmartRunnerParameters;

@RunWith(SmartRunner.class) @SmartRunnerParameters(mockJVMNonDeterminism = true, useVNET = true, resetStaticState = true) 
public class ProjectRequestDataDTO_SSTest extends ProjectRequestDataDTO_SSTest_scaffolding {
// allCoveredLines:[15, 20, 24, 28, 32, 36, 40, 44, 48, 52, 56, 60]

  @Test(timeout = 9000)
  public void test_equals_00()  throws Throwable  {
      //caseID:280294fea787a3d61456224d8ad5079d
      //CoveredLines: [15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15]
      //Input_0_Object: projectRequestDataDTO0
      //Assert: assertTrue(method_result);
      
      ProjectRequestDataDTO projectRequestDataDTO0 = new ProjectRequestDataDTO();
      
      //Call method: equals
      boolean boolean0 = projectRequestDataDTO0.equals(projectRequestDataDTO0);
      
      //Test Result Assert
      assertTrue(boolean0);
  }

  @Test(timeout = 9000)
  public void test_equals_01()  throws Throwable  {
      //caseID:32cf64d0e8b65326a593ecb29464df73
      //CoveredLines: [15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15]
      //Input_0_Object: BigDecimal.ONE
      //Assert: assertFalse(method_result);
      
      ProjectRequestDataDTO projectRequestDataDTO0 = new ProjectRequestDataDTO();
      BigDecimal bigDecimal0 = BigDecimal.ONE;
      
      //Call method: equals
      boolean boolean0 = projectRequestDataDTO0.equals(bigDecimal0);
      
      //Test Result Assert
      assertFalse(boolean0);
  }

  @Test(timeout = 9000)
  public void test_equals_02()  throws Throwable  {
      //caseID:52be715d23a7ca3c026ea1355c653e74
      //CoveredLines: [15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 20, 24, 28, 32, 36, 40, 44, 48, 52, 56, 60]
      //Input_0_Object: projectRequestDataDTO0
      //Assert: assertTrue(method_result);
      
      ProjectRequestDataDTO projectRequestDataDTO0 = new ProjectRequestDataDTO();
      ProjectRequestDataDTO projectRequestDataDTO1 = new ProjectRequestDataDTO();
      
      //Call method: equals
      boolean boolean0 = projectRequestDataDTO1.equals(projectRequestDataDTO0);
      
      //Test Result Assert
      assertTrue(boolean0);
  }

  @Test(timeout = 9000)
  public void test_equals_03()  throws Throwable  {
      //caseID:56ee10e0a0db9f115eb6c8a3e23bed00
      //CoveredLines: [15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 20, 24, 28, 32, 36, 40, 44, 48, 52, 56, 60]
      //Input_0_Object: projectRequestDataDTO1
      //Assert: assertTrue(method_result);
      
      ProjectRequestDataDTO projectRequestDataDTO0 = new ProjectRequestDataDTO();
      ProjectRequestDataDTO projectRequestDataDTO1 = new ProjectRequestDataDTO();
      
      //Call method: equals
      boolean boolean0 = projectRequestDataDTO0.equals(projectRequestDataDTO1);
      
      //Test Result Assert
      assertTrue(boolean0);
  }

  @Test(timeout = 9000)
  public void test_hashCode_04()  throws Throwable  {
      //caseID:f0d50817b1bded66565edb0a369c85c9
      //CoveredLines: [15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 20, 24, 28, 32, 36, 40, 44, 48, 52, 56, 60]
      
      ProjectRequestDataDTO projectRequestDataDTO0 = new ProjectRequestDataDTO();
      
      //Call method: hashCode
      projectRequestDataDTO0.hashCode();
  }

  @Test(timeout = 9000)
  public void test_setAnnualRate_05()  throws Throwable  {
      //caseID:415c786e1c7595ee398aa73693262903
      //CoveredLines: [15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15]
      //Input_0_BigDecimal: BigDecimal.ZERO
      
      ProjectRequestDataDTO projectRequestDataDTO0 = new ProjectRequestDataDTO();
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      
      //Call method: setAnnualRate
      projectRequestDataDTO0.setAnnualRate(bigDecimal0);
      
      //Test Result Assert
      assertNull(projectRequestDataDTO0.getProjectNo());
  }

  @Test(timeout = 9000)
  public void test_setIsAssignment_06()  throws Throwable  {
      //caseID:08f5e2cc5c1908e7231c34cf40a9c1fc
      //CoveredLines: [15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15]
      //Input_0_Integer: 1262
      
      ProjectRequestDataDTO projectRequestDataDTO0 = new ProjectRequestDataDTO();
      Integer integer0 = new Integer(1262);
      
      //Call method: setIsAssignment
      projectRequestDataDTO0.setIsAssignment(integer0);
      
      //Test Result Assert
      assertNull(projectRequestDataDTO0.getProjectNo());
  }

  @Test(timeout = 9000)
  public void test_setProjectAmount_07()  throws Throwable  {
      //caseID:9fbbf092a2da010384723d430012ff94
      //CoveredLines: [15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15]
      //Input_0_BigDecimal: BigDecimal.ZERO
      
      ProjectRequestDataDTO projectRequestDataDTO0 = new ProjectRequestDataDTO();
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      
      //Call method: setProjectAmount
      projectRequestDataDTO0.setProjectAmount(bigDecimal0);
      
      //Test Result Assert
      assertEquals((short)0, bigDecimal0.shortValue());
  }

  @Test(timeout = 9000)
  public void test_setProjectDesc_08()  throws Throwable  {
      //caseID:5eb3bcd00353bf3b365f91b16def3ee1
      //CoveredLines: [15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15]
      //Input_0_String: 1.0
      
      ProjectRequestDataDTO projectRequestDataDTO0 = new ProjectRequestDataDTO();
      
      //Call method: setProjectDesc
      projectRequestDataDTO0.setProjectDesc("1.0");
      
      //Test Result Assert
      assertNull(projectRequestDataDTO0.getProjectPeriod());
  }

  @Test(timeout = 9000)
  public void test_setProjectName_09()  throws Throwable  {
      //caseID:b327771505470b91197d0070987a96ec
      //CoveredLines: [15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15]
      //Input_0_String: voEz:
      
      ProjectRequestDataDTO projectRequestDataDTO0 = new ProjectRequestDataDTO();
      
      //Call method: setProjectName
      projectRequestDataDTO0.setProjectName("voEz:");
      
      //Test Result Assert
      assertNull(projectRequestDataDTO0.getProjectPeriod());
  }

  @Test(timeout = 9000)
  public void test_setProjectNo_10()  throws Throwable  {
      //caseID:941762e15997db6ae645753648cc438a
      //CoveredLines: [15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15]
      //Input_0_String: 1
      
      ProjectRequestDataDTO projectRequestDataDTO0 = new ProjectRequestDataDTO();
      
      //Call method: setProjectNo
      projectRequestDataDTO0.setProjectNo("1");
      
      //Test Result Assert
      assertNull(projectRequestDataDTO0.getIsAssignment());
  }

  @Test(timeout = 9000)
  public void test_setProjectPeriod_11()  throws Throwable  {
      //caseID:f93b1a23bcfb225b7cbe09562778de4f
      //CoveredLines: [15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15]
      //Input_0_Integer: 1
      
      ProjectRequestDataDTO projectRequestDataDTO0 = new ProjectRequestDataDTO();
      Integer integer0 = new Integer(1);
      
      //Call method: setProjectPeriod
      projectRequestDataDTO0.setProjectPeriod(integer0);
      
      //Test Result Assert
      assertNull(projectRequestDataDTO0.getIsAssignment());
  }

  @Test(timeout = 9000)
  public void test_setProjectType_12()  throws Throwable  {
      //caseID:2573879d02e82e6891c9d0899a531822
      //CoveredLines: [15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15]
      //Input_0_String: }F62xBOMt-Q^u+sswzn
      
      ProjectRequestDataDTO projectRequestDataDTO0 = new ProjectRequestDataDTO();
      
      //Call method: setProjectType
      projectRequestDataDTO0.setProjectType("}F62xBOMt-Q^u+sswzn");
      
      //Test Result Assert
      assertNull(projectRequestDataDTO0.getProjectDesc());
  }

  @Test(timeout = 9000)
  public void test_setRepaymentWay_13()  throws Throwable  {
      //caseID:24d173f128a76827e4a4f6c14c3a9a4f
      //CoveredLines: [15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15]
      //Input_0_String: 1
      
      ProjectRequestDataDTO projectRequestDataDTO0 = new ProjectRequestDataDTO();
      
      //Call method: setRepaymentWay
      projectRequestDataDTO0.setRepaymentWay("1");
      
      //Test Result Assert
      assertNull(projectRequestDataDTO0.getProjectType());
  }

  @Test(timeout = 9000)
  public void test_setRequestNo_14()  throws Throwable  {
      //caseID:33129040bc5dbebd9dcf3416a5bd7bc4
      //CoveredLines: [15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15]
      //Input_0_String: 1.0
      
      ProjectRequestDataDTO projectRequestDataDTO0 = new ProjectRequestDataDTO();
      
      //Call method: setRequestNo
      projectRequestDataDTO0.setRequestNo("1.0");
      
      //Test Result Assert
      assertNull(projectRequestDataDTO0.getProjectNo());
  }

  @Test(timeout = 9000)
  public void test_setUserNo_15()  throws Throwable  {
      //caseID:98071eafce74c63e6463bf13efef2d5f
      //CoveredLines: [15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15]
      //Input_0_String: 1.0
      
      ProjectRequestDataDTO projectRequestDataDTO0 = new ProjectRequestDataDTO();
      
      //Call method: setUserNo
      projectRequestDataDTO0.setUserNo("1.0");
      
      //Test Result Assert
      assertNull(projectRequestDataDTO0.getRequestNo());
  }

  @Test(timeout = 9000)
  public void test_toString_16()  throws Throwable  {
      //caseID:e559a0d0e1ef23c7ef6a0bd7475b67be
      //CoveredLines: [15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 20, 24, 28, 32, 36, 40, 44, 48, 52, 56, 60]
      //Assert: assertEquals("ProjectRequestDataDTO(requestNo=null, userNo=null, projectNo=null, projectAmount=null, projectName=null, projectDesc=null, projectType=null, projectPeriod=null, annualRate=null, repaymentWay=null, isAssignment=null)", method_result);
      
      ProjectRequestDataDTO projectRequestDataDTO0 = new ProjectRequestDataDTO();
      
      //Call method: toString
      String string0 = projectRequestDataDTO0.toString();
      
      //Test Result Assert
      assertEquals("ProjectRequestDataDTO(requestNo=null, userNo=null, projectNo=null, projectAmount=null, projectName=null, projectDesc=null, projectType=null, projectPeriod=null, annualRate=null, repaymentWay=null, isAssignment=null)", string0);
  }
}
