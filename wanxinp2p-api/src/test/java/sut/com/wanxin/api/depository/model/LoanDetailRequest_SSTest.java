/*
 * This file was automatically generated by SmartUnit
 */

package sut.com.wanxin.api.depository.model;

import org.junit.Test;
import static org.junit.Assert.*;
import java.lang.reflect.Method;
import com.wanxin.api.depository.model.LoanDetailRequest;
import java.math.BigDecimal;
import org.junit.runner.RunWith;
import org.smartunit.runtime.SmartRunner;
import org.smartunit.runtime.SmartRunnerParameters;

@RunWith(SmartRunner.class) @SmartRunnerParameters(mockJVMNonDeterminism = true, useVNET = true, resetStaticState = true) 
public class LoanDetailRequest_SSTest extends LoanDetailRequest_SSTest_scaffolding {
// allCoveredLines:[15, 20, 25]

  @Test(timeout = 9000)
  public void test_equals_0()  throws Throwable  {
      //caseID:4e9f5a40d2c7754a3383eef32d81ee06
      //CoveredLines: [15, 15, 15, 15, 15, 15, 15]
      //Input_0_Object: com.wanxin.api.depository.model.LoanDetailRequest
      //Assert: assertFalse(method_result);
      
      LoanDetailRequest loanDetailRequest0 = new LoanDetailRequest();
      
      //Call method: equals
      boolean boolean0 = loanDetailRequest0.equals("com.wanxin.api.depository.model.LoanDetailRequest");
      
      //Test Result Assert
      assertFalse(boolean0);
  }

  @Test(timeout = 9000)
  public void test_equals_1()  throws Throwable  {
      //caseID:1ad6d63d10593c4ddc45b68f82f36e9c
      //CoveredLines: [15, 15, 15, 15, 15, 15, 15]
      //Input_0_Object: loanDetailRequest0
      //Assert: assertTrue(method_result);
      
      LoanDetailRequest loanDetailRequest0 = new LoanDetailRequest();
      
      //Call method: equals
      boolean boolean0 = loanDetailRequest0.equals(loanDetailRequest0);
      
      //Test Result Assert
      assertTrue(boolean0);
  }

  @Test(timeout = 9000)
  public void test_equals_2()  throws Throwable  {
      //caseID:d3869e88ca3e4a6220a0726b0b97ca00
      //CoveredLines: [15, 15, 15, 15, 15, 15, 15, 20, 25]
      //Input_0_Object: loanDetailRequest0
      //Assert: assertTrue(method_result);
      
      LoanDetailRequest loanDetailRequest0 = new LoanDetailRequest();
      LoanDetailRequest loanDetailRequest1 = new LoanDetailRequest();
      
      //Call method: equals
      boolean boolean0 = loanDetailRequest1.equals(loanDetailRequest0);
      
      //Test Result Assert
      assertTrue(boolean0);
  }

  @Test(timeout = 9000)
  public void test_equals_3()  throws Throwable  {
      //caseID:a1f9735cafcc28e82340885222f19966
      //CoveredLines: [15, 15, 15, 15, 15, 15, 15, 20, 25]
      //Input_0_Object: loanDetailRequest1
      //Assert: assertTrue(method_result);
      
      LoanDetailRequest loanDetailRequest0 = new LoanDetailRequest();
      LoanDetailRequest loanDetailRequest1 = new LoanDetailRequest();
      
      //Call method: equals
      boolean boolean0 = loanDetailRequest0.equals(loanDetailRequest1);
      
      //Test Result Assert
      assertTrue(boolean0);
  }

  @Test(timeout = 9000)
  public void test_hashCode_4()  throws Throwable  {
      //caseID:c154da1ba17b015d3b7497d6e62e5fac
      //CoveredLines: [15, 15, 15, 15, 15, 15, 15, 20, 25]
      
      LoanDetailRequest loanDetailRequest0 = new LoanDetailRequest();
      
      //Call method: hashCode
      loanDetailRequest0.hashCode();
  }

  @Test(timeout = 9000)
  public void test_setAmount_5()  throws Throwable  {
      //caseID:111ea527eac903d7abacc781d6869415
      //CoveredLines: [15, 15, 15, 15, 15, 15, 15]
      //Input_0_BigDecimal: BigDecimal.ONE
      
      LoanDetailRequest loanDetailRequest0 = new LoanDetailRequest();
      BigDecimal bigDecimal0 = BigDecimal.ONE;
      
      //Call method: setAmount
      loanDetailRequest0.setAmount(bigDecimal0);
      
      //Test Result Assert
      assertNull(loanDetailRequest0.getPreRequestNo());
  }

  @Test(timeout = 9000)
  public void test_setPreRequestNo_6()  throws Throwable  {
      //caseID:f8431cae56b5d19895432d2da8616829
      //CoveredLines: [15, 15, 15, 15, 15, 15, 15]
      //Input_0_String: 1.0
      
      LoanDetailRequest loanDetailRequest0 = new LoanDetailRequest();
      
      //Call method: setPreRequestNo
      loanDetailRequest0.setPreRequestNo("1.0");
      
      //Test Result Assert
      assertEquals("1.0", loanDetailRequest0.getPreRequestNo());
  }

  @Test(timeout = 9000)
  public void test_toString_7()  throws Throwable  {
      //caseID:951f214961737169f327ce5314cc2425
      //CoveredLines: [15, 15, 15, 15, 15, 15, 15, 20, 25]
      //Assert: assertEquals("LoanDetailRequest(amount=null, preRequestNo=null)", method_result);
      
      LoanDetailRequest loanDetailRequest0 = new LoanDetailRequest();
      
      //Call method: toString
      String string0 = loanDetailRequest0.toString();
      
      //Test Result Assert
      assertEquals("LoanDetailRequest(amount=null, preRequestNo=null)", string0);
  }
}
