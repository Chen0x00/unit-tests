/*
 * This file was automatically generated by SmartUnit
 */

package sut.com.wanxin.api.account.model;

import org.junit.Test;
import static org.junit.Assert.*;
import java.lang.reflect.Method;
import com.wanxin.api.account.model.AccountRegisterDTO;
import org.junit.runner.RunWith;
import org.smartunit.runtime.SmartRunner;
import org.smartunit.runtime.SmartRunnerParameters;

@RunWith(SmartRunner.class) @SmartRunnerParameters(mockJVMNonDeterminism = true, useVNET = true, resetStaticState = true) 
public class AccountRegisterDTO_SSTest extends AccountRegisterDTO_SSTest_scaffolding {
// allCoveredLines:[12, 17, 20, 23]

  @Test(timeout = 9000)
  public void test_equals_0()  throws Throwable  {
      //caseID:f5367b10c085cbd1589602cc4df0b461
      //CoveredLines: [12, 12, 12, 12, 12, 12, 12, 12]
      //Input_0_Object: accountRegisterDTO0
      //Assert: assertTrue(method_result);
      
      AccountRegisterDTO accountRegisterDTO0 = new AccountRegisterDTO();
      
      //Call method: equals
      boolean boolean0 = accountRegisterDTO0.equals(accountRegisterDTO0);
      
      //Test Result Assert
      assertTrue(boolean0);
  }

  @Test(timeout = 9000)
  public void test_equals_1()  throws Throwable  {
      //caseID:bb53ed81fcab378828343075e2d68a2f
      //CoveredLines: [12, 12, 12, 12, 12, 12, 12, 12]
      //Input_0_Object: AccountRegisterDTO(username=
      //Assert: assertFalse(method_result);
      
      AccountRegisterDTO accountRegisterDTO0 = new AccountRegisterDTO();
      
      //Call method: equals
      boolean boolean0 = accountRegisterDTO0.equals("AccountRegisterDTO(username=");
      
      //Test Result Assert
      assertFalse(boolean0);
  }

  @Test(timeout = 9000)
  public void test_equals_2()  throws Throwable  {
      //caseID:c09da20494754de67a41e73cbb1f21c9
      //CoveredLines: [12, 12, 12, 12, 12, 12, 12, 12, 17, 20, 23]
      //Input_0_Object: accountRegisterDTO0
      //Assert: assertTrue(method_result);
      
      AccountRegisterDTO accountRegisterDTO0 = new AccountRegisterDTO();
      AccountRegisterDTO accountRegisterDTO1 = new AccountRegisterDTO();
      
      //Call method: equals
      boolean boolean0 = accountRegisterDTO1.equals(accountRegisterDTO0);
      
      //Test Result Assert
      assertTrue(boolean0);
  }

  @Test(timeout = 9000)
  public void test_equals_3()  throws Throwable  {
      //caseID:0b31bfe1b5ac678fe91db959f0f65c07
      //CoveredLines: [12, 12, 12, 12, 12, 12, 12, 12, 17, 20, 23]
      //Input_0_Object: accountRegisterDTO1
      //Assert: assertTrue(method_result);
      
      AccountRegisterDTO accountRegisterDTO0 = new AccountRegisterDTO();
      AccountRegisterDTO accountRegisterDTO1 = new AccountRegisterDTO();
      
      //Call method: equals
      boolean boolean0 = accountRegisterDTO0.equals(accountRegisterDTO1);
      
      //Test Result Assert
      assertTrue(boolean0);
  }

  @Test(timeout = 9000)
  public void test_hashCode_4()  throws Throwable  {
      //caseID:acf21ffa85fa6e9fd7b672ec5f65d0d6
      //CoveredLines: [12, 12, 12, 12, 12, 12, 12, 12, 17, 20, 23]
      
      AccountRegisterDTO accountRegisterDTO0 = new AccountRegisterDTO();
      
      //Call method: hashCode
      accountRegisterDTO0.hashCode();
  }

  @Test(timeout = 9000)
  public void test_setMobile_5()  throws Throwable  {
      //caseID:69b34e6d20a375eb3a582ced51b15a6a
      //CoveredLines: [12, 12, 12, 12, 12, 12, 12, 12]
      //Input_0_String: AUTO
      
      AccountRegisterDTO accountRegisterDTO0 = new AccountRegisterDTO();
      
      //Call method: setMobile
      accountRegisterDTO0.setMobile("AUTO");
      
      //Test Result Assert
      assertNull(accountRegisterDTO0.getPassword());
  }

  @Test(timeout = 9000)
  public void test_setPassword_6()  throws Throwable  {
      //caseID:ab9c9c081ee450236e6cb2ca12d050cb
      //CoveredLines: [12, 12, 12, 12, 12, 12, 12, 12]
      //Input_0_String: )
      
      AccountRegisterDTO accountRegisterDTO0 = new AccountRegisterDTO();
      
      //Call method: setPassword
      accountRegisterDTO0.setPassword(")");
      
      //Test Result Assert
      assertNull(accountRegisterDTO0.getUsername());
  }

  @Test(timeout = 9000)
  public void test_setUsername_7()  throws Throwable  {
      //caseID:4718024870b432557ff8e53ff0425d21
      //CoveredLines: [12, 12, 12, 12, 12, 12, 12, 12]
      //Input_0_String: READ_ONLY
      
      AccountRegisterDTO accountRegisterDTO0 = new AccountRegisterDTO();
      
      //Call method: setUsername
      accountRegisterDTO0.setUsername("READ_ONLY");
      
      //Test Result Assert
      assertNull(accountRegisterDTO0.getMobile());
  }

  @Test(timeout = 9000)
  public void test_toString_8()  throws Throwable  {
      //caseID:b087752f4a2c45614130e26c34e61b2d
      //CoveredLines: [12, 12, 12, 12, 12, 12, 12, 12, 17, 20, 23]
      //Assert: assertEquals("AccountRegisterDTO(username=null, mobile=null, password=null)", method_result);
      
      AccountRegisterDTO accountRegisterDTO0 = new AccountRegisterDTO();
      
      //Call method: toString
      String string0 = accountRegisterDTO0.toString();
      
      //Test Result Assert
      assertEquals("AccountRegisterDTO(username=null, mobile=null, password=null)", string0);
  }
}
