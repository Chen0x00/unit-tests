/*
 * This file was automatically generated by SmartUnit
 */

package sut.com.wanxin.api.transaction.model;

import org.junit.Test;
import static org.junit.Assert.*;
import java.lang.reflect.Method;
import com.wanxin.api.transaction.model.ProjectQueryDTO;
import java.math.BigDecimal;
import org.junit.runner.RunWith;
import org.smartunit.runtime.SmartRunner;
import org.smartunit.runtime.SmartRunnerParameters;

@RunWith(SmartRunner.class) @SmartRunnerParameters(mockJVMNonDeterminism = true, useVNET = true, resetStaticState = true) 
public class ProjectQueryDTO_SSTest extends ProjectQueryDTO_SSTest_scaffolding {
// allCoveredLines:[18, 23, 26, 29, 32, 35, 38, 41, 44, 47, 50]

  @Test(timeout = 9000)
  public void test_equals_00()  throws Throwable  {
      //caseID:ba2fd588dcfd6bf11bdcfcaf7cb6afd5
      //CoveredLines: [18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18]
      //Input_0_Object: projectQueryDTO0
      //Assert: assertTrue(method_result);
      
      ProjectQueryDTO projectQueryDTO0 = new ProjectQueryDTO();
      
      //Call method: equals
      boolean boolean0 = projectQueryDTO0.equals(projectQueryDTO0);
      
      //Test Result Assert
      assertTrue(boolean0);
  }

  @Test(timeout = 9000)
  public void test_equals_01()  throws Throwable  {
      //caseID:9306114ba0c52d865a70fa1d6bb10607
      //CoveredLines: [18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18]
      //Input_0_Object: tuIQ_*^_
      //Assert: assertFalse(method_result);
      
      ProjectQueryDTO projectQueryDTO0 = new ProjectQueryDTO();
      
      //Call method: equals
      boolean boolean0 = projectQueryDTO0.equals("tuIQ_*^_");
      
      //Test Result Assert
      assertFalse(boolean0);
  }

  @Test(timeout = 9000)
  public void test_equals_02()  throws Throwable  {
      //caseID:06cf3bdf64787a623439ef8c96890b93
      //CoveredLines: [18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 23, 26, 29, 32, 35, 38, 41, 44, 47, 50]
      //Input_0_Object: projectQueryDTO1
      //Assert: assertTrue(method_result);
      
      ProjectQueryDTO projectQueryDTO0 = new ProjectQueryDTO();
      ProjectQueryDTO projectQueryDTO1 = new ProjectQueryDTO();
      
      //Call method: equals
      boolean boolean0 = projectQueryDTO0.equals(projectQueryDTO1);
      
      //Test Result Assert
      assertTrue(boolean0);
  }

  @Test(timeout = 9000)
  public void test_equals_03()  throws Throwable  {
      //caseID:8895c84c8973bc6a191ba86c842f9028
      //CoveredLines: [18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 23, 26, 29, 32, 35, 38, 41, 44, 47, 50]
      //Input_0_Object: projectQueryDTO0
      //Assert: assertTrue(method_result);
      
      ProjectQueryDTO projectQueryDTO0 = new ProjectQueryDTO();
      ProjectQueryDTO projectQueryDTO1 = new ProjectQueryDTO();
      
      //Call method: equals
      boolean boolean0 = projectQueryDTO1.equals(projectQueryDTO0);
      
      //Test Result Assert
      assertTrue(boolean0);
  }

  @Test(timeout = 9000)
  public void test_hashCode_04()  throws Throwable  {
      //caseID:8a54f447e664e240bb704e719aa59afd
      //CoveredLines: [18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 23, 26, 29, 32, 35, 38, 41, 44, 47, 50]
      
      ProjectQueryDTO projectQueryDTO0 = new ProjectQueryDTO();
      
      //Call method: hashCode
      projectQueryDTO0.hashCode();
  }

  @Test(timeout = 9000)
  public void test_setBorrowerAnnualRate_05()  throws Throwable  {
      //caseID:17bcabc9e3f73450a8c9e55fd7f0784b
      //CoveredLines: [18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18]
      //Input_0_BigDecimal: BigDecimal.TEN
      
      ProjectQueryDTO projectQueryDTO0 = new ProjectQueryDTO();
      BigDecimal bigDecimal0 = BigDecimal.TEN;
      
      //Call method: setBorrowerAnnualRate
      projectQueryDTO0.setBorrowerAnnualRate(bigDecimal0);
      
      //Test Result Assert
      assertNull(projectQueryDTO0.getRepaymentWay());
  }

  @Test(timeout = 9000)
  public void test_setEndAnnualRate_06()  throws Throwable  {
      //caseID:25e934dfb5a4b6b8e901633da47df7f5
      //CoveredLines: [18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18]
      //Input_0_BigDecimal: 0L
      
      ProjectQueryDTO projectQueryDTO0 = new ProjectQueryDTO();
      BigDecimal bigDecimal0 = new BigDecimal(0L);
      
      //Call method: setEndAnnualRate
      projectQueryDTO0.setEndAnnualRate(bigDecimal0);
      
      //Test Result Assert
      assertNull(projectQueryDTO0.getStartPeriod());
  }

  @Test(timeout = 9000)
  public void test_setEndPeriod_07()  throws Throwable  {
      //caseID:0143f4c15d33437869d136a580bf9c06
      //CoveredLines: [18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18]
      //Input_0_Integer: 43
      
      ProjectQueryDTO projectQueryDTO0 = new ProjectQueryDTO();
      Integer integer0 = new Integer(43);
      
      //Call method: setEndPeriod
      projectQueryDTO0.setEndPeriod(integer0);
      
      //Test Result Assert
      assertNull(projectQueryDTO0.getProjectStatus());
  }

  @Test(timeout = 9000)
  public void test_setName_08()  throws Throwable  {
      //caseID:3d8715557c3e8a24366842ca6110f559
      //CoveredLines: [18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18]
      //Input_0_String: 0
      
      ProjectQueryDTO projectQueryDTO0 = new ProjectQueryDTO();
      
      //Call method: setName
      projectQueryDTO0.setName("0");
      
      //Test Result Assert
      assertNull(projectQueryDTO0.getRepaymentWay());
  }

  @Test(timeout = 9000)
  public void test_setProjectStatus_09()  throws Throwable  {
      //caseID:003289767210e5e11a80daea9da84682
      //CoveredLines: [18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18]
      //Input_0_String: )
      
      ProjectQueryDTO projectQueryDTO0 = new ProjectQueryDTO();
      
      //Call method: setProjectStatus
      projectQueryDTO0.setProjectStatus(")");
      
      //Test Result Assert
      assertNull(projectQueryDTO0.getRepaymentWay());
  }

  @Test(timeout = 9000)
  public void test_setRepaymentWay_10()  throws Throwable  {
      //caseID:25d80243e06ecb30ebe44490a658b698
      //CoveredLines: [18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18]
      //Input_0_String: 43
      
      ProjectQueryDTO projectQueryDTO0 = new ProjectQueryDTO();
      
      //Call method: setRepaymentWay
      projectQueryDTO0.setRepaymentWay("43");
      
      //Test Result Assert
      assertNull(projectQueryDTO0.getStatus());
  }

  @Test(timeout = 9000)
  public void test_setStartAnnualRate_11()  throws Throwable  {
      //caseID:50c754c536023f504c6cee75329f5f22
      //CoveredLines: [18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18]
      //Input_0_BigDecimal: BigDecimal.ONE
      
      ProjectQueryDTO projectQueryDTO0 = new ProjectQueryDTO();
      BigDecimal bigDecimal0 = BigDecimal.ONE;
      
      //Call method: setStartAnnualRate
      projectQueryDTO0.setStartAnnualRate(bigDecimal0);
      
      //Test Result Assert
      assertNull(projectQueryDTO0.getType());
  }

  @Test(timeout = 9000)
  public void test_setStartPeriod_12()  throws Throwable  {
      //caseID:9ebd1d21d7918f3aac6b72ad504fd70d
      //CoveredLines: [18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18]
      //Input_0_Integer: 0
      
      ProjectQueryDTO projectQueryDTO0 = new ProjectQueryDTO();
      Integer integer0 = new Integer(0);
      
      //Call method: setStartPeriod
      projectQueryDTO0.setStartPeriod(integer0);
      
      //Test Result Assert
      assertEquals(0, (int)projectQueryDTO0.getStartPeriod());
  }

  @Test(timeout = 9000)
  public void test_setStatus_13()  throws Throwable  {
      //caseID:c3da6f12dca9f591d8175aa66cb12230
      //CoveredLines: [18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18]
      //Input_0_String: , status=
      
      ProjectQueryDTO projectQueryDTO0 = new ProjectQueryDTO();
      
      //Call method: setStatus
      projectQueryDTO0.setStatus(", status=");
      
      //Test Result Assert
      assertNull(projectQueryDTO0.getRepaymentWay());
  }

  @Test(timeout = 9000)
  public void test_setType_14()  throws Throwable  {
      //caseID:2a4c00c81a34e91dcb3b202f35a282d3
      //CoveredLines: [18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18]
      //Input_0_String: 1
      
      ProjectQueryDTO projectQueryDTO0 = new ProjectQueryDTO();
      
      //Call method: setType
      projectQueryDTO0.setType("1");
      
      //Test Result Assert
      assertNull(projectQueryDTO0.getStatus());
  }

  @Test(timeout = 9000)
  public void test_toString_15()  throws Throwable  {
      //caseID:1c0191e2a88358143591f86c5bb1165a
      //CoveredLines: [18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 23, 26, 29, 32, 35, 38, 41, 44, 47, 50]
      //Assert: assertEquals("ProjectQueryDTO(type=null, name=null, startPeriod=null, endPeriod=null, startAnnualRate=null, endAnnualRate=null, borrowerAnnualRate=null, repaymentWay=null, projectStatus=null, status=null)", method_result);
      
      ProjectQueryDTO projectQueryDTO0 = new ProjectQueryDTO();
      
      //Call method: toString
      String string0 = projectQueryDTO0.toString();
      
      //Test Result Assert
      assertEquals("ProjectQueryDTO(type=null, name=null, startPeriod=null, endPeriod=null, startAnnualRate=null, endAnnualRate=null, borrowerAnnualRate=null, repaymentWay=null, projectStatus=null, status=null)", string0);
  }
}
