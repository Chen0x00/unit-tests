/*
 * This file was automatically generated by SmartUnit
 */

package sut.com.wanxin.api.transaction.model;

import org.junit.Test;
import static org.junit.Assert.*;
import java.lang.reflect.Method;
import com.wanxin.api.transaction.model.ProjectInvestDTO;
import org.junit.runner.RunWith;
import org.smartunit.runtime.SmartRunner;
import org.smartunit.runtime.SmartRunnerParameters;

@RunWith(SmartRunner.class) @SmartRunnerParameters(mockJVMNonDeterminism = true, useVNET = true, resetStaticState = true) 
public class ProjectInvestDTO_SSTest extends ProjectInvestDTO_SSTest_scaffolding {
// allCoveredLines:[16, 21, 24]

  @Test(timeout = 9000)
  public void test_equals_0()  throws Throwable  {
      //caseID:789836f7a8182e4718240f0b6d1b0b52
      //CoveredLines: [16, 16, 16, 16, 16, 16, 16]
      //Input_0_Object: 0L
      //Assert: assertFalse(method_result);
      
      ProjectInvestDTO projectInvestDTO0 = new ProjectInvestDTO();
      Long long0 = new Long(0L);
      
      //Call method: equals
      boolean boolean0 = projectInvestDTO0.equals(long0);
      
      //Test Result Assert
      assertFalse(boolean0);
  }

  @Test(timeout = 9000)
  public void test_equals_1()  throws Throwable  {
      //caseID:0bd084f0fd1a373105230213bdb9932c
      //CoveredLines: [16, 16, 16, 16, 16, 16, 16]
      //Input_0_Object: projectInvestDTO0
      //Assert: assertTrue(method_result);
      
      ProjectInvestDTO projectInvestDTO0 = new ProjectInvestDTO();
      
      //Call method: equals
      boolean boolean0 = projectInvestDTO0.equals(projectInvestDTO0);
      
      //Test Result Assert
      assertTrue(boolean0);
  }

  @Test(timeout = 9000)
  public void test_equals_2()  throws Throwable  {
      //caseID:540f7af38803a549a48fcf8d762db090
      //CoveredLines: [16, 16, 16, 16, 16, 16, 16, 21, 24]
      //Input_0_Object: projectInvestDTO0
      //Assert: assertTrue(method_result);
      
      ProjectInvestDTO projectInvestDTO0 = new ProjectInvestDTO();
      ProjectInvestDTO projectInvestDTO1 = new ProjectInvestDTO();
      
      //Call method: equals
      boolean boolean0 = projectInvestDTO1.equals(projectInvestDTO0);
      
      //Test Result Assert
      assertTrue(boolean0);
  }

  @Test(timeout = 9000)
  public void test_equals_3()  throws Throwable  {
      //caseID:2fa8bbec8cd34639f25f87038d83dfa9
      //CoveredLines: [16, 16, 16, 16, 16, 16, 16, 21, 24]
      //Input_0_Object: projectInvestDTO1
      //Assert: assertTrue(method_result);
      
      ProjectInvestDTO projectInvestDTO0 = new ProjectInvestDTO();
      ProjectInvestDTO projectInvestDTO1 = new ProjectInvestDTO();
      
      //Call method: equals
      boolean boolean0 = projectInvestDTO0.equals(projectInvestDTO1);
      
      //Test Result Assert
      assertTrue(boolean0);
  }

  @Test(timeout = 9000)
  public void test_hashCode_4()  throws Throwable  {
      //caseID:06af288e590e41724c82b6530aef7e49
      //CoveredLines: [16, 16, 16, 16, 16, 16, 16, 21, 24]
      
      ProjectInvestDTO projectInvestDTO0 = new ProjectInvestDTO();
      
      //Call method: hashCode
      projectInvestDTO0.hashCode();
  }

  @Test(timeout = 9000)
  public void test_setAmount_5()  throws Throwable  {
      //caseID:53a3a96a35bf3cb2672183e9ef3ffde5
      //CoveredLines: [16, 16, 16, 16, 16, 16, 16]
      //Input_0_String: )
      
      ProjectInvestDTO projectInvestDTO0 = new ProjectInvestDTO();
      
      //Call method: setAmount
      projectInvestDTO0.setAmount(")");
      
      //Test Result Assert
      assertEquals(")", projectInvestDTO0.getAmount());
  }

  @Test(timeout = 9000)
  public void test_setId_6()  throws Throwable  {
      //caseID:a476c74ac68d90b455f8a488017af9ae
      //CoveredLines: [16, 16, 16, 16, 16, 16, 16]
      //Input_0_Long: 0L
      
      ProjectInvestDTO projectInvestDTO0 = new ProjectInvestDTO();
      Long long0 = new Long(0L);
      
      //Call method: setId
      projectInvestDTO0.setId(long0);
      
      //Test Result Assert
      assertNull(projectInvestDTO0.getAmount());
  }

  @Test(timeout = 9000)
  public void test_toString_7()  throws Throwable  {
      //caseID:1a0b44cc57227f321fb78b9878aa897c
      //CoveredLines: [16, 16, 16, 16, 16, 16, 16, 21, 24]
      //Assert: assertEquals("ProjectInvestDTO(id=null, amount=null)", method_result);
      
      ProjectInvestDTO projectInvestDTO0 = new ProjectInvestDTO();
      
      //Call method: toString
      String string0 = projectInvestDTO0.toString();
      
      //Test Result Assert
      assertEquals("ProjectInvestDTO(id=null, amount=null)", string0);
  }
}
