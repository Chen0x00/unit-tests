/*
 * This file was automatically generated by SmartUnit
 */

package sut.com.wanxin.api.consumer.model;

import org.junit.Test;
import static org.junit.Assert.*;
import java.lang.reflect.Method;
import com.wanxin.api.consumer.model.ConsumerDetailsDTO;
import java.time.LocalDateTime;
import org.junit.runner.RunWith;
import org.smartunit.runtime.PrivateAccess;
import org.smartunit.runtime.SmartRunner;
import org.smartunit.runtime.SmartRunnerParameters;

@RunWith(SmartRunner.class) @SmartRunnerParameters(mockJVMNonDeterminism = true, useVNET = true, resetStaticState = true) 
public class ConsumerDetailsDTO_SSTest extends ConsumerDetailsDTO_SSTest_scaffolding {
// allCoveredLines:[18, 23, 26, 29, 32, 35, 38, 41, 44, 47, 50, 53, 56, 59]

  @Test(timeout = 9000)
  public void test_equals_00()  throws Throwable  {
      //caseID:cad1604be91f9c7e9a125494a487cdcd
      //CoveredLines: [18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18]
      //Input_0_Object: consumerDetailsDTO0
      //Assert: assertTrue(method_result);
      
      ConsumerDetailsDTO consumerDetailsDTO0 = new ConsumerDetailsDTO();
      
      //Call method: equals
      boolean boolean0 = consumerDetailsDTO0.equals(consumerDetailsDTO0);
      
      //Test Result Assert
      assertTrue(boolean0);
  }

  @Test(timeout = 9000)
  public void test_equals_01()  throws Throwable  {
      //caseID:8b483c5d7f9a9a7fe94da50cb85ce1c3
      //CoveredLines: [18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 53]
      //Input_0_Object: , fullname=
      //Assert: assertFalse(method_result);
      
      ConsumerDetailsDTO consumerDetailsDTO0 = new ConsumerDetailsDTO();
      
      consumerDetailsDTO0.getUploadDate();
      
      //Call method: equals
      boolean boolean0 = consumerDetailsDTO0.equals(", fullname=");
      
      //Test Result Assert
      assertFalse(boolean0);
  }

  @Test(timeout = 9000)
  public void test_equals_02()  throws Throwable  {
      //caseID:0071c642c6fc815cee609dc266c4bdf9
      //CoveredLines: [18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 23, 53]
      //Input_0_Object: consumerDetailsDTO0
      //Assert: assertFalse(method_result);
      
      ConsumerDetailsDTO consumerDetailsDTO0 = new ConsumerDetailsDTO();
      Long long0 = new Long(4367L);
      
      consumerDetailsDTO0.getUploadDate();
      
      PrivateAccess.setVariable((Class<?>) ConsumerDetailsDTO.class, consumerDetailsDTO0, "id", (Object) long0);
      ConsumerDetailsDTO consumerDetailsDTO1 = new ConsumerDetailsDTO();
      
      //Call method: equals
      boolean boolean0 = consumerDetailsDTO1.equals(consumerDetailsDTO0);
      
      //Test Result Assert
      assertFalse(boolean0);
  }

  @Test(timeout = 9000)
  public void test_equals_03()  throws Throwable  {
      //caseID:932a598e16da5c47e2862bf6b55a1c0f
      //CoveredLines: [18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 23, 53]
      //Input_0_Object: consumerDetailsDTO1
      //Assert: assertFalse(method_result);
      
      ConsumerDetailsDTO consumerDetailsDTO0 = new ConsumerDetailsDTO();
      Long long0 = new Long(0L);
      
      consumerDetailsDTO0.getUploadDate();
      
      PrivateAccess.setVariable((Class<?>) ConsumerDetailsDTO.class, consumerDetailsDTO0, "id", (Object) long0);
      ConsumerDetailsDTO consumerDetailsDTO1 = new ConsumerDetailsDTO();
      
      //Call method: equals
      boolean boolean0 = consumerDetailsDTO0.equals(consumerDetailsDTO1);
      
      //Test Result Assert
      assertFalse(boolean0);
  }

  @Test(timeout = 9000)
  public void test_hashCode_04()  throws Throwable  {
      //caseID:bf0519d21e88e5b821ed3e8e302f2591
      //CoveredLines: [18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 23, 26, 29, 32, 35, 38, 41, 44, 47, 50, 53, 56, 59]
      
      ConsumerDetailsDTO consumerDetailsDTO0 = new ConsumerDetailsDTO();
      
      //Call method: hashCode
      consumerDetailsDTO0.hashCode();
  }

  @Test(timeout = 9000)
  public void test_hashCode_05()  throws Throwable  {
      //caseID:0d6b9c48d3784db2d0ab4541d6e9049d
      //CoveredLines: [18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 23, 26, 29, 32, 35, 38, 41, 44, 47, 50, 53, 56, 59]
      
      ConsumerDetailsDTO consumerDetailsDTO0 = new ConsumerDetailsDTO();
      
      consumerDetailsDTO0.getUploadDate();
      
      //Call method: hashCode
      consumerDetailsDTO0.hashCode();
  }

  @Test(timeout = 9000)
  public void test_setAddress_06()  throws Throwable  {
      //caseID:46fd816cbe6dee86d9d2c1e46f1066e2
      //CoveredLines: [18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 53]
      //Input_0_String: 
      
      ConsumerDetailsDTO consumerDetailsDTO0 = new ConsumerDetailsDTO();
      
      consumerDetailsDTO0.getUploadDate();
      
      //Call method: setAddress
      consumerDetailsDTO0.setAddress("");
      
      //Test Result Assert
      assertEquals("", consumerDetailsDTO0.getAddress());
  }

  @Test(timeout = 9000)
  public void test_setConsumerId_07()  throws Throwable  {
      //caseID:2c9b477929c970a8125317d6ea28626f
      //CoveredLines: [18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18]
      //Input_0_Long: 1L
      
      ConsumerDetailsDTO consumerDetailsDTO0 = new ConsumerDetailsDTO();
      Long long0 = new Long(1L);
      
      //Call method: setConsumerId
      consumerDetailsDTO0.setConsumerId(long0);
      
      //Test Result Assert
      assertNull(consumerDetailsDTO0.getIdNumber());
  }

  @Test(timeout = 9000)
  public void test_setContactMobile_08()  throws Throwable  {
      //caseID:259f993b9024d70fcf08458517fca32d
      //CoveredLines: [18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 53]
      //Input_0_String: , contactRelation=
      
      ConsumerDetailsDTO consumerDetailsDTO0 = new ConsumerDetailsDTO();
      
      consumerDetailsDTO0.getUploadDate();
      
      //Call method: setContactMobile
      consumerDetailsDTO0.setContactMobile(", contactRelation=");
      
      //Test Result Assert
      assertNull(consumerDetailsDTO0.getEnterpriseMail());
  }

  @Test(timeout = 9000)
  public void test_setContactName_09()  throws Throwable  {
      //caseID:bf4a9bff94ae50d343a4e650adac67be
      //CoveredLines: [18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 53]
      //Input_0_String: 1.0
      
      ConsumerDetailsDTO consumerDetailsDTO0 = new ConsumerDetailsDTO();
      
      consumerDetailsDTO0.getUploadDate();
      
      //Call method: setContactName
      consumerDetailsDTO0.setContactName("1.0");
      
      //Test Result Assert
      assertNull(consumerDetailsDTO0.getContactRelation());
  }

  @Test(timeout = 9000)
  public void test_setContactRelation_10()  throws Throwable  {
      //caseID:1ff439abf60820151b7323f2f3f4f281
      //CoveredLines: [18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18]
      //Input_0_String: 0
      
      ConsumerDetailsDTO consumerDetailsDTO0 = new ConsumerDetailsDTO();
      
      //Call method: setContactRelation
      consumerDetailsDTO0.setContactRelation("0");
      
      //Test Result Assert
      assertNull(consumerDetailsDTO0.getContactName());
  }

  @Test(timeout = 9000)
  public void test_setEnterpriseMail_11()  throws Throwable  {
      //caseID:d7dcc2c7b30a71eb97cdbfd54c2501cb
      //CoveredLines: [18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 53]
      //Input_0_String: Use SerializedForm
      
      ConsumerDetailsDTO consumerDetailsDTO0 = new ConsumerDetailsDTO();
      
      consumerDetailsDTO0.getUploadDate();
      
      //Call method: setEnterpriseMail
      consumerDetailsDTO0.setEnterpriseMail("Use SerializedForm");
      
      //Test Result Assert
      assertNull(consumerDetailsDTO0.getId());
  }

  @Test(timeout = 9000)
  public void test_setFullname_12()  throws Throwable  {
      //caseID:554563d6d2b87bda4b6d7e1b7c6fd099
      //CoveredLines: [18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18]
      //Input_0_String: fp_=[5yTEXb/Pn#q%
      
      ConsumerDetailsDTO consumerDetailsDTO0 = new ConsumerDetailsDTO();
      
      //Call method: setFullname
      consumerDetailsDTO0.setFullname("fp_=[5yTEXb/Pn#q%");
      
      //Test Result Assert
      assertNull(consumerDetailsDTO0.getIdNumber());
  }

  @Test(timeout = 9000)
  public void test_setId_13()  throws Throwable  {
      //caseID:3ab3c8c17c7010cb4eb26613e45bf52e
      //CoveredLines: [18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18]
      //Input_0_Long: 2486L
      
      ConsumerDetailsDTO consumerDetailsDTO0 = new ConsumerDetailsDTO();
      Long long0 = new Long(2486L);
      
      //Call method: setId
      consumerDetailsDTO0.setId(long0);
      
      //Test Result Assert
      assertNull(consumerDetailsDTO0.getIdNumber());
  }

  @Test(timeout = 9000)
  public void test_setIdCardEmblem_14()  throws Throwable  {
      //caseID:e77cbac4633d721743cd416fc8733141
      //CoveredLines: [18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18]
      //Input_0_String: https://
      
      ConsumerDetailsDTO consumerDetailsDTO0 = new ConsumerDetailsDTO();
      
      //Call method: setIdCardEmblem
      consumerDetailsDTO0.setIdCardEmblem("https://");
      
      //Test Result Assert
      assertNull(consumerDetailsDTO0.getIdNumber());
  }

  @Test(timeout = 9000)
  public void test_setIdCardNo_15()  throws Throwable  {
      //caseID:5f75fdc7f103a3653278bd216a63bfcc
      //CoveredLines: [18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18]
      //Input_0_String: 1
      
      ConsumerDetailsDTO consumerDetailsDTO0 = new ConsumerDetailsDTO();
      
      //Call method: setIdCardNo
      consumerDetailsDTO0.setIdCardNo("1");
      
      //Test Result Assert
      assertNull(consumerDetailsDTO0.getContactRelation());
  }

  @Test(timeout = 9000)
  public void test_setIdCardPhoto_16()  throws Throwable  {
      //caseID:b99b3b380b1999ce3f8de9aa6b89019a
      //CoveredLines: [18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18]
      //Input_0_String: , idNumber=
      
      ConsumerDetailsDTO consumerDetailsDTO0 = new ConsumerDetailsDTO();
      
      //Call method: setIdCardPhoto
      consumerDetailsDTO0.setIdCardPhoto(", idNumber=");
      
      //Test Result Assert
      assertNull(consumerDetailsDTO0.getContactName());
  }

  @Test(timeout = 9000)
  public void test_setIdNumber_17()  throws Throwable  {
      //caseID:9f8e7f9fbf30ee47a1dbef7b021c910d
      //CoveredLines: [18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 53]
      //Input_0_String: , contactRelation=
      
      ConsumerDetailsDTO consumerDetailsDTO0 = new ConsumerDetailsDTO();
      
      consumerDetailsDTO0.getUploadDate();
      
      //Call method: setIdNumber
      consumerDetailsDTO0.setIdNumber(", contactRelation=");
      
      //Test Result Assert
      assertNull(consumerDetailsDTO0.getIdCardPhoto());
  }

  @Test(timeout = 9000)
  public void test_setUploadDate_18()  throws Throwable  {
      //caseID:c41b6f7b8c345dcce8bd88f27f22981a
      //CoveredLines: [18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 53]
      //Input_0_LocalDateTime: null
      
      ConsumerDetailsDTO consumerDetailsDTO0 = new ConsumerDetailsDTO();
      
      consumerDetailsDTO0.getUploadDate();
      
      //Call method: setUploadDate
      consumerDetailsDTO0.setUploadDate((LocalDateTime) null);
      
      //Test Result Assert
      assertNull(consumerDetailsDTO0.getConsumerId());
  }

  @Test(timeout = 9000)
  public void test_toString_19()  throws Throwable  {
      //caseID:bf4c8e9963e4fc47d02d2a078d52b4e3
      //CoveredLines: [18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 23, 26, 29, 32, 35, 38, 41, 44, 47, 50, 53, 56, 59]
      //Assert: assertEquals("ConsumerDetailsDTO(id=null, consumerId=null, idCardNo=null, idCardPhoto=null, idCardEmblem=null, address=null, enterpriseMail=null, contactRelation=null, contactName=null, contactMobile=null, uploadDate=null, fullname=null, idNumber=null)", method_result);
      
      ConsumerDetailsDTO consumerDetailsDTO0 = new ConsumerDetailsDTO();
      
      //Call method: toString
      String string0 = consumerDetailsDTO0.toString();
      
      //Test Result Assert
      assertEquals("ConsumerDetailsDTO(id=null, consumerId=null, idCardNo=null, idCardPhoto=null, idCardEmblem=null, address=null, enterpriseMail=null, contactRelation=null, contactName=null, contactMobile=null, uploadDate=null, fullname=null, idNumber=null)", string0);
  }
}
