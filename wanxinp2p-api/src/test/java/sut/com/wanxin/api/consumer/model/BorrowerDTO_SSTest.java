/*
 * This file was automatically generated by SmartUnit
 */

package sut.com.wanxin.api.consumer.model;

import org.junit.Test;
import static org.junit.Assert.*;
import java.lang.reflect.Method;
import com.wanxin.api.consumer.model.BorrowerDTO;
import org.junit.runner.RunWith;
import org.smartunit.runtime.SmartRunner;
import org.smartunit.runtime.SmartRunnerParameters;

@RunWith(SmartRunner.class) @SmartRunnerParameters(mockJVMNonDeterminism = true, useVNET = true, resetStaticState = true) 
public class BorrowerDTO_SSTest extends BorrowerDTO_SSTest_scaffolding {
// allCoveredLines:[12, 17, 20, 23, 26, 29, 32, 35, 38]

  @Test(timeout = 9000)
  public void test_equals_00()  throws Throwable  {
      //caseID:6a926cbedfee0e50511e68b995079dd7
      //CoveredLines: [12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12]
      //Input_0_Object: 1.0
      //Assert: assertFalse(method_result);
      
      BorrowerDTO borrowerDTO0 = new BorrowerDTO();
      
      //Call method: equals
      boolean boolean0 = borrowerDTO0.equals("1.0");
      
      //Test Result Assert
      assertFalse(boolean0);
  }

  @Test(timeout = 9000)
  public void test_equals_01()  throws Throwable  {
      //caseID:d7e2a598cb1761a4b5f4218a48f58d7f
      //CoveredLines: [12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12]
      //Input_0_Object: borrowerDTO0
      //Assert: assertTrue(method_result);
      
      BorrowerDTO borrowerDTO0 = new BorrowerDTO();
      
      //Call method: equals
      boolean boolean0 = borrowerDTO0.equals(borrowerDTO0);
      
      //Test Result Assert
      assertTrue(boolean0);
  }

  @Test(timeout = 9000)
  public void test_equals_02()  throws Throwable  {
      //caseID:eb7919252523433c044a6b2c24e08d71
      //CoveredLines: [12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 17, 20, 23, 26, 29, 32, 35, 38]
      //Input_0_Object: borrowerDTO1
      //Assert: assertTrue(method_result);
      
      BorrowerDTO borrowerDTO0 = new BorrowerDTO();
      BorrowerDTO borrowerDTO1 = new BorrowerDTO();
      
      //Call method: equals
      boolean boolean0 = borrowerDTO0.equals(borrowerDTO1);
      
      //Test Result Assert
      assertTrue(boolean0);
  }

  @Test(timeout = 9000)
  public void test_equals_03()  throws Throwable  {
      //caseID:0e2ed00fea5de689d227c258a99fd53c
      //CoveredLines: [12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 17, 20, 23, 26, 29, 32, 35, 38]
      //Input_0_Object: borrowerDTO0
      //Assert: assertTrue(method_result);
      
      BorrowerDTO borrowerDTO0 = new BorrowerDTO();
      BorrowerDTO borrowerDTO1 = new BorrowerDTO();
      
      //Call method: equals
      boolean boolean0 = borrowerDTO1.equals(borrowerDTO0);
      
      //Test Result Assert
      assertTrue(boolean0);
  }

  @Test(timeout = 9000)
  public void test_hashCode_04()  throws Throwable  {
      //caseID:0f177fc2f47de79ad76b16a05e5aa8ba
      //CoveredLines: [12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 17, 20, 23, 26, 29, 32, 35, 38]
      
      BorrowerDTO borrowerDTO0 = new BorrowerDTO();
      
      //Call method: hashCode
      borrowerDTO0.hashCode();
  }

  @Test(timeout = 9000)
  public void test_setAge_05()  throws Throwable  {
      //caseID:0720a53447b1b23949e88c0ec0191652
      //CoveredLines: [12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12]
      //Input_0_Integer: 0
      
      BorrowerDTO borrowerDTO0 = new BorrowerDTO();
      Integer integer0 = new Integer(0);
      
      //Call method: setAge
      borrowerDTO0.setAge(integer0);
      
      //Test Result Assert
      assertNull(borrowerDTO0.getBirthday());
  }

  @Test(timeout = 9000)
  public void test_setBirthday_06()  throws Throwable  {
      //caseID:0bfe6c92c9f9f9409bf9709a296d5673
      //CoveredLines: [12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12]
      //Input_0_String: 1
      
      BorrowerDTO borrowerDTO0 = new BorrowerDTO();
      
      //Call method: setBirthday
      borrowerDTO0.setBirthday("1");
      
      //Test Result Assert
      assertNull(borrowerDTO0.getUsername());
  }

  @Test(timeout = 9000)
  public void test_setFullname_07()  throws Throwable  {
      //caseID:7e158a7560bccf81c23577234d44a20f
      //CoveredLines: [12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12]
      //Input_0_String: 1
      
      BorrowerDTO borrowerDTO0 = new BorrowerDTO();
      
      //Call method: setFullname
      borrowerDTO0.setFullname("1");
      
      //Test Result Assert
      assertNull(borrowerDTO0.getAge());
  }

  @Test(timeout = 9000)
  public void test_setGender_08()  throws Throwable  {
      //caseID:30d7b4da905c444919ef69332c0bd9f8
      //CoveredLines: [12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12]
      //Input_0_String: , username=
      
      BorrowerDTO borrowerDTO0 = new BorrowerDTO();
      
      //Call method: setGender
      borrowerDTO0.setGender(", username=");
      
      //Test Result Assert
      assertNull(borrowerDTO0.getId());
  }

  @Test(timeout = 9000)
  public void test_setId_09()  throws Throwable  {
      //caseID:6a62ea6560e6dba055826444a3aeaecc
      //CoveredLines: [12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12]
      //Input_0_Long: 1923L
      
      BorrowerDTO borrowerDTO0 = new BorrowerDTO();
      Long long0 = new Long(1923L);
      
      //Call method: setId
      borrowerDTO0.setId(long0);
      
      //Test Result Assert
      assertEquals(1923L, (long)borrowerDTO0.getId());
  }

  @Test(timeout = 9000)
  public void test_setIdNumber_10()  throws Throwable  {
      //caseID:20a2214735861f5cf7ef8b58176ef68a
      //CoveredLines: [12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12]
      //Input_0_String: 
      
      BorrowerDTO borrowerDTO0 = new BorrowerDTO();
      
      //Call method: setIdNumber
      borrowerDTO0.setIdNumber("");
      
      //Test Result Assert
      assertNull(borrowerDTO0.getMobile());
  }

  @Test(timeout = 9000)
  public void test_setMobile_11()  throws Throwable  {
      //caseID:beaac2cc6a61a821983af34534fcd3f2
      //CoveredLines: [12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12]
      //Input_0_String: , age=
      
      BorrowerDTO borrowerDTO0 = new BorrowerDTO();
      
      //Call method: setMobile
      borrowerDTO0.setMobile(", age=");
      
      //Test Result Assert
      assertNull(borrowerDTO0.getAge());
  }

  @Test(timeout = 9000)
  public void test_setUsername_12()  throws Throwable  {
      //caseID:ca325ce94f1f1c73e3587d04372361c2
      //CoveredLines: [12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12]
      //Input_0_String: 1.0
      
      BorrowerDTO borrowerDTO0 = new BorrowerDTO();
      
      //Call method: setUsername
      borrowerDTO0.setUsername("1.0");
      
      //Test Result Assert
      assertNull(borrowerDTO0.getIdNumber());
  }

  @Test(timeout = 9000)
  public void test_toString_13()  throws Throwable  {
      //caseID:10c1d7aea982119578ea8a25c67a6701
      //CoveredLines: [12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 17, 20, 23, 26, 29, 32, 35, 38]
      //Assert: assertEquals("BorrowerDTO(id=null, username=null, fullname=null, idNumber=null, mobile=null, age=null, birthday=null, gender=null)", method_result);
      
      BorrowerDTO borrowerDTO0 = new BorrowerDTO();
      
      //Call method: toString
      String string0 = borrowerDTO0.toString();
      
      //Test Result Assert
      assertEquals("BorrowerDTO(id=null, username=null, fullname=null, idNumber=null, mobile=null, age=null, birthday=null, gender=null)", string0);
  }
}
