/*
 * This file was automatically generated by SmartUnit
 */

package sut.com.wanxin.api.depository.model;

import org.junit.Test;
import static org.junit.Assert.*;
import java.lang.reflect.Method;
import com.wanxin.api.depository.model.DepositoryBaseResponse;
import org.junit.runner.RunWith;
import org.smartunit.runtime.SmartRunner;
import org.smartunit.runtime.SmartRunnerParameters;

@RunWith(SmartRunner.class) @SmartRunnerParameters(mockJVMNonDeterminism = true, useVNET = true, resetStaticState = true) 
public class DepositoryBaseResponse_SSTest extends DepositoryBaseResponse_SSTest_scaffolding {
// allCoveredLines:[17, 22, 25, 28, 31]

  @Test(timeout = 9000)
  public void test_equals_0()  throws Throwable  {
      //caseID:dfff842be29ed0bf57270fef4df89fb7
      //CoveredLines: [17, 17, 17, 17, 17, 17, 17, 17, 17]
      //Input_0_Object: (-1)
      //Assert: assertFalse(method_result);
      
      DepositoryBaseResponse depositoryBaseResponse0 = new DepositoryBaseResponse();
      Integer integer0 = new Integer((-1));
      
      //Call method: equals
      boolean boolean0 = depositoryBaseResponse0.equals(integer0);
      
      //Test Result Assert
      assertFalse(boolean0);
  }

  @Test(timeout = 9000)
  public void test_equals_1()  throws Throwable  {
      //caseID:925c4af65705f9edea3da1c2c1517a5e
      //CoveredLines: [17, 17, 17, 17, 17, 17, 17, 17, 17]
      //Input_0_Object: depositoryBaseResponse0
      //Assert: assertTrue(method_result);
      
      DepositoryBaseResponse depositoryBaseResponse0 = new DepositoryBaseResponse();
      
      //Call method: equals
      boolean boolean0 = depositoryBaseResponse0.equals(depositoryBaseResponse0);
      
      //Test Result Assert
      assertTrue(boolean0);
  }

  @Test(timeout = 9000)
  public void test_equals_2()  throws Throwable  {
      //caseID:776e303b1bb7345bcdc853512ef2d3f0
      //CoveredLines: [17, 17, 17, 17, 17, 17, 17, 17, 17, 22, 25, 28, 31]
      //Input_0_Object: depositoryBaseResponse0
      //Assert: assertTrue(method_result);
      
      DepositoryBaseResponse depositoryBaseResponse0 = new DepositoryBaseResponse();
      DepositoryBaseResponse depositoryBaseResponse1 = new DepositoryBaseResponse();
      
      //Call method: equals
      boolean boolean0 = depositoryBaseResponse1.equals(depositoryBaseResponse0);
      
      //Test Result Assert
      assertTrue(boolean0);
  }

  @Test(timeout = 9000)
  public void test_equals_3()  throws Throwable  {
      //caseID:afbb476e5f017967881e3cb7bed047f9
      //CoveredLines: [17, 17, 17, 17, 17, 17, 17, 17, 17, 22, 25, 28, 31]
      //Input_0_Object: depositoryBaseResponse1
      //Assert: assertTrue(method_result);
      
      DepositoryBaseResponse depositoryBaseResponse0 = new DepositoryBaseResponse();
      DepositoryBaseResponse depositoryBaseResponse1 = new DepositoryBaseResponse();
      
      //Call method: equals
      boolean boolean0 = depositoryBaseResponse0.equals(depositoryBaseResponse1);
      
      //Test Result Assert
      assertTrue(boolean0);
  }

  @Test(timeout = 9000)
  public void test_hashCode_4()  throws Throwable  {
      //caseID:be9dc747dc3552503ce166f4325caa59
      //CoveredLines: [17, 17, 17, 17, 17, 17, 17, 17, 17, 22, 25, 28, 31]
      
      DepositoryBaseResponse depositoryBaseResponse0 = new DepositoryBaseResponse();
      
      //Call method: hashCode
      depositoryBaseResponse0.hashCode();
  }

  @Test(timeout = 9000)
  public void test_setRequestNo_5()  throws Throwable  {
      //caseID:2247a1ffbf36dea01985e248f09347e8
      //CoveredLines: [17, 17, 17, 17, 17, 17, 17, 17, 17]
      //Input_0_String: 
      //Assert: assertEquals("", method_result.getRequestNo());
      
      DepositoryBaseResponse depositoryBaseResponse0 = new DepositoryBaseResponse();
      
      //Call method: setRequestNo
      DepositoryBaseResponse depositoryBaseResponse1 = depositoryBaseResponse0.setRequestNo("");
      
      //Test Result Assert
      assertEquals("", depositoryBaseResponse1.getRequestNo());
  }

  @Test(timeout = 9000)
  public void test_setRespCode_6()  throws Throwable  {
      //caseID:ec372d5e9672e5b115c453eabc5d4afb
      //CoveredLines: [17, 17, 17, 17, 17, 17, 17, 17, 17]
      //Input_0_String: 1.0
      //Assert: assertSame(depositoryBaseResponse0, method_result);
      
      DepositoryBaseResponse depositoryBaseResponse0 = new DepositoryBaseResponse();
      
      //Call method: setRespCode
      DepositoryBaseResponse depositoryBaseResponse1 = depositoryBaseResponse0.setRespCode("1.0");
      
      //Test Result Assert
      assertSame(depositoryBaseResponse0, depositoryBaseResponse1);
  }

  @Test(timeout = 9000)
  public void test_setRespMsg_7()  throws Throwable  {
      //caseID:256f7ab90985e47e8239370de6f0c6be
      //CoveredLines: [17, 17, 17, 17, 17, 17, 17, 17, 17]
      //Input_0_String: 1
      //Assert: assertSame(depositoryBaseResponse0, method_result);
      
      DepositoryBaseResponse depositoryBaseResponse0 = new DepositoryBaseResponse();
      
      //Call method: setRespMsg
      DepositoryBaseResponse depositoryBaseResponse1 = depositoryBaseResponse0.setRespMsg("1");
      
      //Test Result Assert
      assertSame(depositoryBaseResponse0, depositoryBaseResponse1);
  }

  @Test(timeout = 9000)
  public void test_setStatus_8()  throws Throwable  {
      //caseID:78a13eb4a25b8e161dae9e7920a1edf9
      //CoveredLines: [17, 17, 17, 17, 17, 17, 17, 17, 17]
      //Input_0_Integer: (-1)
      //Assert: assertNull(method_result.getRespCode());
      
      DepositoryBaseResponse depositoryBaseResponse0 = new DepositoryBaseResponse();
      Integer integer0 = new Integer((-1));
      
      //Call method: setStatus
      DepositoryBaseResponse depositoryBaseResponse1 = depositoryBaseResponse0.setStatus(integer0);
      
      //Test Result Assert
      assertNull(depositoryBaseResponse1.getRespCode());
  }

  @Test(timeout = 9000)
  public void test_toString_9()  throws Throwable  {
      //caseID:895bd1736785a8636340f81a1533cfcf
      //CoveredLines: [17, 17, 17, 17, 17, 17, 17, 17, 17, 22, 25, 28, 31]
      //Assert: assertEquals("DepositoryBaseResponse(respCode=null, respMsg=null, status=null, requestNo=null)", method_result);
      
      DepositoryBaseResponse depositoryBaseResponse0 = new DepositoryBaseResponse();
      
      //Call method: toString
      String string0 = depositoryBaseResponse0.toString();
      
      //Test Result Assert
      assertEquals("DepositoryBaseResponse(respCode=null, respMsg=null, status=null, requestNo=null)", string0);
  }
}
