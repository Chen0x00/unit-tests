/*
 * This file was automatically generated by SmartUnit
 */

package sut.com.wanxin.repayment.utils;

import org.junit.Test;
import static org.junit.Assert.*;
import java.lang.reflect.Method;
import com.wanxin.api.repayment.model.EqualInterestRepayment;
import com.wanxin.api.repayment.model.EqualPrincipalRepayment;
import com.wanxin.repayment.utils.RepaymentUtil;
import java.math.BigDecimal;
import org.junit.runner.RunWith;
import org.smartunit.runtime.SmartRunner;
import org.smartunit.runtime.SmartRunnerParameters;

@RunWith(SmartRunner.class) @SmartRunnerParameters(mockJVMNonDeterminism = true, useVNET = true, resetStaticState = true) 
public class RepaymentUtil_SSTest extends RepaymentUtil_SSTest_scaffolding {
// allCoveredLines:[19, 30, 32, 34, 36, 38, 40, 42, 44, 45, 47, 60, 61, 74, 76, 77, 78, 79, 80, 81, 83, 95, 96, 97, 98, 99, 100, 101, 102, 114, 115, 116, 117, 118, 119, 131, 132, 133, 134, 135, 149, 151, 153, 155, 157, 159, 161, 163, 164, 166, 179, 181, 182, 183, 184, 185, 186, 188, 200, 201, 214, 215, 216, 217, 218, 219, 220, 221, 222, 234, 235, 236, 237, 238, 239]

  @Test(timeout = 9000)
  public void test_fixedCapital_0()  throws Throwable  {
      //caseID:1f934958aba3b98da056a40155212aa1
      //CoveredLines: [149, 151, 153, 155, 157, 159, 161, 163, 164, 166, 179, 181, 182, 183, 184, 185, 186, 188, 200, 201, 214, 215, 216, 217, 218, 219, 220, 221, 222, 234, 235, 236, 237, 238, 239]
      //Input_0_BigDecimal: BigDecimal.TEN
      //Input_1_BigDecimal: BigDecimal.TEN
      //Input_2_int: 1
      //Input_3_BigDecimal: BigDecimal.TEN
      //Assert: assertNotNull(method_result);
      
      BigDecimal bigDecimal0 = BigDecimal.TEN;
      
      //Call method: fixedCapital
      EqualPrincipalRepayment equalPrincipalRepayment0 = RepaymentUtil.fixedCapital(bigDecimal0, bigDecimal0, 1, bigDecimal0);
      
      //Test Result Assert
      assertNotNull(equalPrincipalRepayment0);
  }

  @Test(timeout = 9000)
  public void test_fixedRepayment_1()  throws Throwable  {
      //caseID:00380e91a0652f16ffdb99708139f788
      //CoveredLines: [30, 32, 34, 36, 38, 40, 42, 44, 45, 47, 60, 61, 74, 76, 77, 78, 79, 80, 81, 83, 95, 96, 97, 98, 99, 100, 101, 102, 114, 115, 116, 117, 118, 119, 131, 132, 133, 134, 135]
      //Input_0_BigDecimal: BigDecimal.ONE
      //Input_1_BigDecimal: BigDecimal.ONE
      //Input_2_int: 35
      //Input_3_BigDecimal: BigDecimal.ONE
      //Assert: assertNotNull(method_result);
      
      BigDecimal bigDecimal0 = BigDecimal.ONE;
      
      //Call method: fixedRepayment
      EqualInterestRepayment equalInterestRepayment0 = RepaymentUtil.fixedRepayment(bigDecimal0, bigDecimal0, 35, bigDecimal0);
      
      //Test Result Assert
      assertNotNull(equalInterestRepayment0);
  }

  @Test(timeout = 9000)
  public void test_getCapitalTotalInterest_2()  throws Throwable  {
      //caseID:7dbf808f152a7fa9adfe1f11ec48571a
      //CoveredLines: [19, 179, 181, 182, 183, 184, 185, 186, 188, 200, 201, 214, 215, 216, 217, 218, 219, 220, 221, 222, 234, 235, 236, 237, 238, 239]
      //Input_0_BigDecimal: BigDecimal.ZERO
      //Input_1_double: -943.45
      //Input_2_int: 54
      //Assert: assertFalse(method_result.equals((Object)bigDecimal0));
      //Assert: assertNotSame(method_result, bigDecimal0);
      //Assert: assertEquals((byte)0, method_result.byteValue());
      
      RepaymentUtil repaymentUtil0 = new RepaymentUtil();
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      
      //Call method: getCapitalTotalInterest
      BigDecimal bigDecimal1 = RepaymentUtil.getCapitalTotalInterest(bigDecimal0, (-943.45), 54);
      
      //Test Result Assert
      assertFalse(bigDecimal1.equals((Object)bigDecimal0));
      
      //Test Result Assert
      assertNotSame(bigDecimal1, bigDecimal0);
      
      //Test Result Assert
      assertEquals((byte)0, bigDecimal1.byteValue());
  }
}
