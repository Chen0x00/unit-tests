/*
 * This file was automatically generated by SmartUnit
 */

package sut.com.wanxin.repayment.entity;

import org.junit.Test;
import static org.junit.Assert.*;
import java.lang.reflect.Method;
import com.wanxin.repayment.entity.RepaymentDetail;
import java.math.BigDecimal;
import java.time.LocalDateTime;
import org.junit.runner.RunWith;
import org.smartunit.runtime.SmartRunner;
import org.smartunit.runtime.SmartRunnerParameters;
import org.smartunit.runtime.mock.java.time.MockLocalDateTime;

@RunWith(SmartRunner.class) @SmartRunnerParameters(mockJVMNonDeterminism = true, useVNET = true, resetStaticState = true) 
public class RepaymentDetail_SSTest extends RepaymentDetail_SSTest_scaffolding {
// allCoveredLines:[23, 24, 35, 41, 47, 53, 60, 66]

  @Test(timeout = 9000)
  public void test_equals_00()  throws Throwable  {
      //caseID:3b0e7e1e2b73fc4146c890a2013c8409
      //CoveredLines: [23, 23, 23, 23, 23, 23, 23, 23, 24, 24, 24]
      //Input_0_Object: object0
      //Assert: assertFalse(method_result);
      
      RepaymentDetail repaymentDetail0 = new RepaymentDetail();
      Long long0 = new Long(833L);
      
      repaymentDetail0.setRepaymentPlanId(long0);
      Object object0 = new Object();
      
      //Call method: equals
      boolean boolean0 = repaymentDetail0.equals(object0);
      
      //Test Result Assert
      assertFalse(boolean0);
  }

  @Test(timeout = 9000)
  public void test_equals_01()  throws Throwable  {
      //caseID:de17294ff798c8d464cc25184e2d7160
      //CoveredLines: [23, 23, 23, 23, 23, 23, 23, 23, 24, 24, 24]
      //Input_0_Object: null
      //Assert: assertFalse(method_result);
      
      RepaymentDetail repaymentDetail0 = new RepaymentDetail();
      
      //Call method: equals
      boolean boolean0 = repaymentDetail0.equals(null);
      
      //Test Result Assert
      assertFalse(boolean0);
  }

  @Test(timeout = 9000)
  public void test_equals_02()  throws Throwable  {
      //caseID:7641c732f58a33eb0bf3d7e967cb514f
      //CoveredLines: [23, 23, 23, 23, 23, 23, 23, 23, 24, 24, 24]
      //Input_0_Object: repaymentDetail0
      //Assert: assertTrue(method_result);
      
      RepaymentDetail repaymentDetail0 = new RepaymentDetail();
      
      //Call method: equals
      boolean boolean0 = repaymentDetail0.equals(repaymentDetail0);
      
      //Test Result Assert
      assertTrue(boolean0);
  }

  @Test(timeout = 9000)
  public void test_equals_03()  throws Throwable  {
      //caseID:5dbb4ea924d6fd5a933cd2e6c0ca5624
      //CoveredLines: [23, 23, 23, 23, 23, 23, 23, 23, 24, 24, 24, 35, 41, 47, 53, 60, 66]
      //Input_0_Object: repaymentDetail1
      //Assert: assertTrue(method_result);
      
      RepaymentDetail repaymentDetail0 = new RepaymentDetail();
      RepaymentDetail repaymentDetail1 = new RepaymentDetail();
      
      //Call method: equals
      boolean boolean0 = repaymentDetail0.equals(repaymentDetail1);
      
      //Test Result Assert
      assertTrue(boolean0);
  }

  @Test(timeout = 9000)
  public void test_equals_04()  throws Throwable  {
      //caseID:659ad7698d9c274a420b38fd9a82764a
      //CoveredLines: [23, 23, 23, 23, 23, 23, 23, 23, 24, 24, 24, 35, 41, 47, 53, 60, 66]
      //Input_0_Object: repaymentDetail0
      //Assert: assertTrue(method_result);
      
      RepaymentDetail repaymentDetail0 = new RepaymentDetail();
      RepaymentDetail repaymentDetail1 = new RepaymentDetail();
      
      //Call method: equals
      boolean boolean0 = repaymentDetail1.equals(repaymentDetail0);
      
      //Test Result Assert
      assertTrue(boolean0);
  }

  @Test(timeout = 9000)
  public void test_hashCode_05()  throws Throwable  {
      //caseID:c2b3c3df11c4e02a218359940f7033fb
      //CoveredLines: [23, 23, 23, 23, 23, 23, 23, 23, 24, 24, 24, 35, 41, 47, 53, 60, 66]
      
      RepaymentDetail repaymentDetail0 = new RepaymentDetail();
      
      //Call method: hashCode
      repaymentDetail0.hashCode();
  }

  @Test(timeout = 9000)
  public void test_setAmount_06()  throws Throwable  {
      //caseID:45f8dc1fb902c99d5bf2f5ac06772f91
      //CoveredLines: [23, 23, 23, 23, 23, 23, 23, 23]
      //Input_0_BigDecimal: 0.0
      //Assert: assertSame(repaymentDetail0, method_result);
      
      RepaymentDetail repaymentDetail0 = new RepaymentDetail();
      BigDecimal bigDecimal0 = new BigDecimal(0.0);
      
      //Call method: setAmount
      RepaymentDetail repaymentDetail1 = repaymentDetail0.setAmount(bigDecimal0);
      
      //Test Result Assert
      assertSame(repaymentDetail0, repaymentDetail1);
  }

  @Test(timeout = 9000)
  public void test_setId_07()  throws Throwable  {
      //caseID:39451e258818d3fa0764d28a22a0bee2
      //CoveredLines: [23, 23, 23, 23, 23, 23, 23, 23]
      //Input_0_Long: 1447L
      //Assert: assertNull(method_result.getRequestNo());
      
      RepaymentDetail repaymentDetail0 = new RepaymentDetail();
      Long long0 = new Long(1447L);
      
      //Call method: setId
      RepaymentDetail repaymentDetail1 = repaymentDetail0.setId(long0);
      
      //Test Result Assert
      assertNull(repaymentDetail1.getRequestNo());
  }

  @Test(timeout = 9000)
  public void test_setRepaymentDate_08()  throws Throwable  {
      //caseID:70be77cc046ce49c7a2084ba45477fa8
      //CoveredLines: [23, 23, 23, 23, 23, 23, 23, 23]
      //Input_0_LocalDateTime: localDateTime0
      //Assert: assertSame(repaymentDetail0, method_result);
      
      RepaymentDetail repaymentDetail0 = new RepaymentDetail();
      
      LocalDateTime localDateTime0 = MockLocalDateTime.now();
      
      //Call method: setRepaymentDate
      RepaymentDetail repaymentDetail1 = repaymentDetail0.setRepaymentDate(localDateTime0);
      
      //Test Result Assert
      assertSame(repaymentDetail0, repaymentDetail1);
  }

  @Test(timeout = 9000)
  public void test_setRequestNo_09()  throws Throwable  {
      //caseID:55710e61816f9afa9350ccc7af60e77a
      //CoveredLines: [23, 23, 23, 23, 23, 23, 23, 23]
      //Input_0_String: 
      //Assert: assertEquals("", method_result.getRequestNo());
      
      RepaymentDetail repaymentDetail0 = new RepaymentDetail();
      
      //Call method: setRequestNo
      RepaymentDetail repaymentDetail1 = repaymentDetail0.setRequestNo("");
      
      //Test Result Assert
      assertEquals("", repaymentDetail1.getRequestNo());
  }

  @Test(timeout = 9000)
  public void test_setStatus_10()  throws Throwable  {
      //caseID:9875ad8d5306dcfa9e7b87a546e773a4
      //CoveredLines: [23, 23, 23, 23, 23, 23, 23, 23]
      //Input_0_Integer: 60000
      //Assert: assertSame(repaymentDetail0, method_result);
      
      RepaymentDetail repaymentDetail0 = new RepaymentDetail();
      Integer integer0 = new Integer(60000);
      
      //Call method: setStatus
      RepaymentDetail repaymentDetail1 = repaymentDetail0.setStatus(integer0);
      
      //Test Result Assert
      assertSame(repaymentDetail0, repaymentDetail1);
  }

  @Test(timeout = 9000)
  public void test_toString_11()  throws Throwable  {
      //caseID:d2a0c8a8d6274631932d4e74423cbae0
      //CoveredLines: [23, 23, 23, 23, 23, 23, 23, 23, 35, 41, 47, 53, 60, 66]
      //Assert: assertEquals("RepaymentDetail(id=null, repaymentPlanId=null, amount=null, repaymentDate=null, requestNo=null, status=null)", method_result);
      
      RepaymentDetail repaymentDetail0 = new RepaymentDetail();
      
      //Call method: toString
      String string0 = repaymentDetail0.toString();
      
      //Test Result Assert
      assertEquals("RepaymentDetail(id=null, repaymentPlanId=null, amount=null, repaymentDate=null, requestNo=null, status=null)", string0);
  }
}
