/*
 * This file was automatically generated by SmartUnit
 */

package sut.com.wanxin.repayment.entity;

import org.junit.Test;
import static org.junit.Assert.*;
import java.lang.reflect.Method;
import com.wanxin.repayment.entity.ReceivableDetail;
import java.math.BigDecimal;
import java.time.LocalDateTime;
import org.junit.runner.RunWith;
import org.smartunit.runtime.SmartRunner;
import org.smartunit.runtime.SmartRunnerParameters;
import org.smartunit.runtime.mock.java.time.MockLocalDateTime;

@RunWith(SmartRunner.class) @SmartRunnerParameters(mockJVMNonDeterminism = true, useVNET = true, resetStaticState = true) 
public class ReceivableDetail_SSTest extends ReceivableDetail_SSTest_scaffolding {
// allCoveredLines:[22, 23, 33, 39, 45, 51]

  @Test(timeout = 9000)
  public void test_equals_0()  throws Throwable  {
      //caseID:0de50ad2d941dc120507cfc00a3920a3
      //CoveredLines: [22, 22, 22, 22, 22, 22, 23, 23, 23]
      //Input_0_Object: receivableDetail0
      //Assert: assertTrue(method_result);
      
      ReceivableDetail receivableDetail0 = new ReceivableDetail();
      
      //Call method: equals
      boolean boolean0 = receivableDetail0.equals(receivableDetail0);
      
      //Test Result Assert
      assertTrue(boolean0);
  }

  @Test(timeout = 9000)
  public void test_equals_1()  throws Throwable  {
      //caseID:b2bc0a16cc8b6b09b7ea69ccf8f13d20
      //CoveredLines: [22, 22, 22, 22, 22, 22, 23, 23, 23]
      //Input_0_Object: localDateTime0
      //Assert: assertFalse(method_result);
      
      ReceivableDetail receivableDetail0 = new ReceivableDetail();
      
      LocalDateTime localDateTime0 = MockLocalDateTime.now();
      
      //Call method: equals
      boolean boolean0 = receivableDetail0.equals(localDateTime0);
      
      //Test Result Assert
      assertFalse(boolean0);
  }

  @Test(timeout = 9000)
  public void test_equals_2()  throws Throwable  {
      //caseID:f59d90d1ec18bd75fe5911c49ef61809
      //CoveredLines: [22, 22, 22, 22, 22, 22, 23, 23, 23, 33, 39, 45, 51]
      //Input_0_Object: receivableDetail0
      //Assert: assertTrue(method_result);
      
      ReceivableDetail receivableDetail0 = new ReceivableDetail();
      ReceivableDetail receivableDetail1 = new ReceivableDetail();
      
      //Call method: equals
      boolean boolean0 = receivableDetail1.equals(receivableDetail0);
      
      //Test Result Assert
      assertTrue(boolean0);
  }

  @Test(timeout = 9000)
  public void test_equals_3()  throws Throwable  {
      //caseID:b346f5b2252f8bd78f70c5d58241553f
      //CoveredLines: [22, 22, 22, 22, 22, 22, 23, 23, 23, 33, 39, 45, 51]
      //Input_0_Object: receivableDetail1
      //Assert: assertTrue(method_result);
      
      ReceivableDetail receivableDetail0 = new ReceivableDetail();
      ReceivableDetail receivableDetail1 = new ReceivableDetail();
      
      //Call method: equals
      boolean boolean0 = receivableDetail0.equals(receivableDetail1);
      
      //Test Result Assert
      assertTrue(boolean0);
  }

  @Test(timeout = 9000)
  public void test_hashCode_4()  throws Throwable  {
      //caseID:eb464cb9512f82e3b1721ae8368a3261
      //CoveredLines: [22, 22, 22, 22, 22, 22, 23, 23, 23, 33, 39, 45, 51]
      
      ReceivableDetail receivableDetail0 = new ReceivableDetail();
      Long long0 = new Long(0L);
      
      receivableDetail0.setId(long0);
      
      //Call method: hashCode
      receivableDetail0.hashCode();
  }

  @Test(timeout = 9000)
  public void test_hashCode_5()  throws Throwable  {
      //caseID:4653f4af4fd788aee0da340481372a78
      //CoveredLines: [22, 22, 22, 22, 22, 22, 23, 23, 23, 33, 39, 45, 51]
      
      ReceivableDetail receivableDetail0 = new ReceivableDetail();
      
      //Call method: hashCode
      receivableDetail0.hashCode();
  }

  @Test(timeout = 9000)
  public void test_setAmount_6()  throws Throwable  {
      //caseID:4469dba40abc2143be22ae0100b5eab7
      //CoveredLines: [22, 22, 22, 22, 22, 22]
      //Input_0_BigDecimal: BigDecimal.ONE
      //Assert: assertNull(method_result.getId());
      
      ReceivableDetail receivableDetail0 = new ReceivableDetail();
      BigDecimal bigDecimal0 = BigDecimal.ONE;
      
      //Call method: setAmount
      ReceivableDetail receivableDetail1 = receivableDetail0.setAmount(bigDecimal0);
      
      //Test Result Assert
      assertNull(receivableDetail1.getId());
  }

  @Test(timeout = 9000)
  public void test_setReceivableDate_7()  throws Throwable  {
      //caseID:ba72e4bb8e4ffbfed98ae4acf558b2bd
      //CoveredLines: [22, 22, 22, 22, 22, 22]
      //Input_0_LocalDateTime: localDateTime0
      //Assert: assertNull(method_result.getReceivableId());
      
      ReceivableDetail receivableDetail0 = new ReceivableDetail();
      
      LocalDateTime localDateTime0 = MockLocalDateTime.now();
      
      //Call method: setReceivableDate
      ReceivableDetail receivableDetail1 = receivableDetail0.setReceivableDate(localDateTime0);
      
      //Test Result Assert
      assertNull(receivableDetail1.getReceivableId());
  }

  @Test(timeout = 9000)
  public void test_setReceivableId_8()  throws Throwable  {
      //caseID:15fbabbd456a0f67208559da0676b42b
      //CoveredLines: [22, 22, 22, 22, 22, 22]
      //Input_0_Long: 2749L
      //Assert: assertSame(method_result, receivableDetail0);
      
      ReceivableDetail receivableDetail0 = new ReceivableDetail();
      Long long0 = new Long(2749L);
      
      //Call method: setReceivableId
      ReceivableDetail receivableDetail1 = receivableDetail0.setReceivableId(long0);
      
      //Test Result Assert
      assertSame(receivableDetail1, receivableDetail0);
  }

  @Test(timeout = 9000)
  public void test_toString_9()  throws Throwable  {
      //caseID:990acd926775b52f4b0213328d5557d7
      //CoveredLines: [22, 22, 22, 22, 22, 22, 33, 39, 45, 51]
      //Assert: assertEquals("ReceivableDetail(id=null, receivableId=null, amount=null, receivableDate=null)", method_result);
      
      ReceivableDetail receivableDetail0 = new ReceivableDetail();
      
      //Call method: toString
      String string0 = receivableDetail0.toString();
      
      //Test Result Assert
      assertEquals("ReceivableDetail(id=null, receivableId=null, amount=null, receivableDate=null)", string0);
  }
}
