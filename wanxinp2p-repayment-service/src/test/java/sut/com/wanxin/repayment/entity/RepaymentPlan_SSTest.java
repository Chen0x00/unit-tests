/*
 * This file was automatically generated by SmartUnit
 */

package sut.com.wanxin.repayment.entity;

import org.junit.Test;
import static org.junit.Assert.*;
import java.lang.reflect.Method;
import com.wanxin.repayment.entity.RepaymentPlan;
import java.math.BigDecimal;
import java.time.LocalDateTime;
import org.junit.runner.RunWith;
import org.smartunit.runtime.PrivateAccess;
import org.smartunit.runtime.SmartRunner;
import org.smartunit.runtime.SmartRunnerParameters;
import org.smartunit.runtime.mock.java.time.MockLocalDateTime;

@RunWith(SmartRunner.class) @SmartRunnerParameters(mockJVMNonDeterminism = true, useVNET = true, resetStaticState = true) 
public class RepaymentPlan_SSTest extends RepaymentPlan_SSTest_scaffolding {
// allCoveredLines:[21, 31, 37, 43, 49, 55, 61, 67, 73, 79, 85, 91, 97, 103]

  @Test(timeout = 9000)
  public void test_equals_00()  throws Throwable  {
      //caseID:980687f39125bf8a83135aeaa73c742f
      //CoveredLines: [21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 97]
      //Input_0_Object: BigDecimal.ZERO
      //Assert: assertFalse(method_result);
      
      RepaymentPlan repaymentPlan0 = new RepaymentPlan();
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      
      repaymentPlan0.getCreateDate();
      
      //Call method: equals
      boolean boolean0 = repaymentPlan0.equals(bigDecimal0);
      
      //Test Result Assert
      assertFalse(boolean0);
  }

  @Test(timeout = 9000)
  public void test_equals_01()  throws Throwable  {
      //caseID:8c49bb42a0eb45f7c670defaad6c4f80
      //CoveredLines: [21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 97]
      //Input_0_Object: repaymentPlan0
      //Assert: assertTrue(method_result);
      
      RepaymentPlan repaymentPlan0 = new RepaymentPlan();
      
      repaymentPlan0.getCreateDate();
      
      //Call method: equals
      boolean boolean0 = repaymentPlan0.equals(repaymentPlan0);
      
      //Test Result Assert
      assertTrue(boolean0);
  }

  @Test(timeout = 9000)
  public void test_equals_02()  throws Throwable  {
      //caseID:7ec80fdc541394acb25353aee5f18eeb
      //CoveredLines: [21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 31, 97]
      //Input_0_Object: repaymentPlan0
      //Assert: assertFalse(method_result);
      
      RepaymentPlan repaymentPlan0 = new RepaymentPlan();
      Long long0 = new Long(486);
      
      repaymentPlan0.getCreateDate();
      
      PrivateAccess.setVariable((Class<?>) RepaymentPlan.class, repaymentPlan0, "id", (Object) long0);
      RepaymentPlan repaymentPlan1 = new RepaymentPlan();
      
      //Call method: equals
      boolean boolean0 = repaymentPlan1.equals(repaymentPlan0);
      
      //Test Result Assert
      assertFalse(boolean0);
  }

  @Test(timeout = 9000)
  public void test_equals_03()  throws Throwable  {
      //caseID:ea1422e68bfeecf5107390d03ae5cb20
      //CoveredLines: [21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 31, 97]
      //Input_0_Object: repaymentPlan1
      //Assert: assertFalse(method_result);
      
      RepaymentPlan repaymentPlan0 = new RepaymentPlan();
      Long long0 = new Long(486);
      
      repaymentPlan0.getCreateDate();
      
      PrivateAccess.setVariable((Class<?>) RepaymentPlan.class, repaymentPlan0, "id", (Object) long0);
      RepaymentPlan repaymentPlan1 = new RepaymentPlan();
      
      //Call method: equals
      boolean boolean0 = repaymentPlan0.equals(repaymentPlan1);
      
      //Test Result Assert
      assertFalse(boolean0);
  }

  @Test(timeout = 9000)
  public void test_hashCode_04()  throws Throwable  {
      //caseID:c0b3df99fa7d1a261a5ac8403580b5ae
      //CoveredLines: [21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 31, 37, 43, 49, 55, 61, 67, 73, 79, 85, 91, 97, 103]
      
      RepaymentPlan repaymentPlan0 = new RepaymentPlan();
      
      repaymentPlan0.getShouldRepaymentDate();
      
      //Call method: hashCode
      repaymentPlan0.hashCode();
  }

  @Test(timeout = 9000)
  public void test_hashCode_05()  throws Throwable  {
      //caseID:921f439a66d9ba9781e797795b15c3c8
      //CoveredLines: [21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 31, 37, 43, 49, 55, 61, 67, 73, 79, 85, 91, 97, 103]
      
      RepaymentPlan repaymentPlan0 = new RepaymentPlan();
      
      //Call method: hashCode
      repaymentPlan0.hashCode();
  }

  @Test(timeout = 9000)
  public void test_setAmount_06()  throws Throwable  {
      //caseID:baca1e52ff36e4263ad20de4a861d152
      //CoveredLines: [21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21]
      //Input_0_BigDecimal: BigDecimal.TEN
      
      RepaymentPlan repaymentPlan0 = new RepaymentPlan();
      BigDecimal bigDecimal0 = BigDecimal.TEN;
      
      //Call method: setAmount
      repaymentPlan0.setAmount(bigDecimal0);
      
      //Test Result Assert
      assertEquals((byte)10, bigDecimal0.byteValue());
  }

  @Test(timeout = 9000)
  public void test_setCommission_07()  throws Throwable  {
      //caseID:50f8fe2f9a1d16099273ecc4c366d018
      //CoveredLines: [21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21]
      //Input_0_BigDecimal: 2.147483648E9
      
      RepaymentPlan repaymentPlan0 = new RepaymentPlan();
      BigDecimal bigDecimal0 = new BigDecimal(2.147483648E9);
      
      //Call method: setCommission
      repaymentPlan0.setCommission(bigDecimal0);
      
      //Test Result Assert
      assertEquals((byte)0, bigDecimal0.byteValue());
  }

  @Test(timeout = 9000)
  public void test_setConsumerId_08()  throws Throwable  {
      //caseID:9cd89f82852f95697c1761a5eeabcb82
      //CoveredLines: [21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 85]
      //Input_0_Long: 948L
      
      RepaymentPlan repaymentPlan0 = new RepaymentPlan();
      Long long0 = new Long(948L);
      
      repaymentPlan0.getShouldRepaymentDate();
      
      //Call method: setConsumerId
      repaymentPlan0.setConsumerId(long0);
      
      //Test Result Assert
      assertNull(repaymentPlan0.getProjectId());
  }

  @Test(timeout = 9000)
  public void test_setCreateDate_09()  throws Throwable  {
      //caseID:e1a6662f0b2ac38ecce552c25b8f64be
      //CoveredLines: [21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21]
      //Input_0_LocalDateTime: localDateTime0
      
      RepaymentPlan repaymentPlan0 = new RepaymentPlan();
      
      LocalDateTime localDateTime0 = MockLocalDateTime.now();
      
      //Call method: setCreateDate
      repaymentPlan0.setCreateDate(localDateTime0);
      
      //Test Result Assert
      assertNull(repaymentPlan0.getProjectNo());
  }

  @Test(timeout = 9000)
  public void test_setId_10()  throws Throwable  {
      //caseID:fe3a3abdf51a3e6e3b7267a4569f9c4e
      //CoveredLines: [21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 97]
      //Input_0_Long: 3398L
      
      RepaymentPlan repaymentPlan0 = new RepaymentPlan();
      Long long0 = new Long(3398L);
      
      repaymentPlan0.getCreateDate();
      
      //Call method: setId
      repaymentPlan0.setId(long0);
      
      //Test Result Assert
      assertNull(repaymentPlan0.getUserNo());
  }

  @Test(timeout = 9000)
  public void test_setInterest_11()  throws Throwable  {
      //caseID:5c06d96662c4249357cc08b8d75beadf
      //CoveredLines: [21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21]
      //Input_0_BigDecimal: BigDecimal.ONE
      
      RepaymentPlan repaymentPlan0 = new RepaymentPlan();
      BigDecimal bigDecimal0 = BigDecimal.ONE;
      
      //Call method: setInterest
      repaymentPlan0.setInterest(bigDecimal0);
      
      //Test Result Assert
      assertNull(repaymentPlan0.getProjectId());
  }

  @Test(timeout = 9000)
  public void test_setNumberOfPeriods_12()  throws Throwable  {
      //caseID:2f3de2b16e88f2e891c7084bc80099fc
      //CoveredLines: [21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21]
      //Input_0_Integer: 0
      
      RepaymentPlan repaymentPlan0 = new RepaymentPlan();
      Integer integer0 = new Integer(0);
      
      //Call method: setNumberOfPeriods
      repaymentPlan0.setNumberOfPeriods(integer0);
      
      //Test Result Assert
      assertNull(repaymentPlan0.getConsumerId());
  }

  @Test(timeout = 9000)
  public void test_setPrincipal_13()  throws Throwable  {
      //caseID:600de4896b05c7edebe6331473711708
      //CoveredLines: [21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21]
      //Input_0_BigDecimal: 35L
      
      RepaymentPlan repaymentPlan0 = new RepaymentPlan();
      BigDecimal bigDecimal0 = new BigDecimal(35L);
      
      //Call method: setPrincipal
      repaymentPlan0.setPrincipal(bigDecimal0);
      
      //Test Result Assert
      assertNull(repaymentPlan0.getProjectId());
  }

  @Test(timeout = 9000)
  public void test_setProjectId_14()  throws Throwable  {
      //caseID:a6377297f5013e4951b1dd9d2de987db
      //CoveredLines: [21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21]
      //Input_0_Long: 2368L
      
      RepaymentPlan repaymentPlan0 = new RepaymentPlan();
      Long long0 = new Long(2368L);
      
      //Call method: setProjectId
      repaymentPlan0.setProjectId(long0);
      
      //Test Result Assert
      assertNull(repaymentPlan0.getRepaymentStatus());
  }

  @Test(timeout = 9000)
  public void test_setProjectNo_15()  throws Throwable  {
      //caseID:0b08560751d05191ebf13a95a180d73d
      //CoveredLines: [21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 97]
      //Input_0_String: , repaymentStatus=
      
      RepaymentPlan repaymentPlan0 = new RepaymentPlan();
      
      repaymentPlan0.getCreateDate();
      
      //Call method: setProjectNo
      repaymentPlan0.setProjectNo(", repaymentStatus=");
      
      //Test Result Assert
      assertNull(repaymentPlan0.getProjectId());
  }

  @Test(timeout = 9000)
  public void test_setRepaymentStatus_16()  throws Throwable  {
      //caseID:45bb6b703ca06675a380fc3787e98cbc
      //CoveredLines: [21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 97]
      //Input_0_String: , repaymentStatus=
      
      RepaymentPlan repaymentPlan0 = new RepaymentPlan();
      
      repaymentPlan0.getCreateDate();
      
      //Call method: setRepaymentStatus
      repaymentPlan0.setRepaymentStatus(", repaymentStatus=");
      
      //Test Result Assert
      assertNull(repaymentPlan0.getNumberOfPeriods());
  }

  @Test(timeout = 9000)
  public void test_setShouldRepaymentDate_17()  throws Throwable  {
      //caseID:90ab2b9e84ae621c4996cb0895765f42
      //CoveredLines: [21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21]
      //Input_0_LocalDateTime: localDateTime0
      
      RepaymentPlan repaymentPlan0 = new RepaymentPlan();
      
      LocalDateTime localDateTime0 = MockLocalDateTime.now();
      
      //Call method: setShouldRepaymentDate
      repaymentPlan0.setShouldRepaymentDate(localDateTime0);
      
      //Test Result Assert
      assertNull(repaymentPlan0.getRepaymentStatus());
  }

  @Test(timeout = 9000)
  public void test_setUserNo_18()  throws Throwable  {
      //caseID:0eaf1a562abdb957d6f664ce5870cc5e
      //CoveredLines: [21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 85]
      //Input_0_String: Z|0}fY9OmJ3HO'!n
      
      RepaymentPlan repaymentPlan0 = new RepaymentPlan();
      
      repaymentPlan0.getShouldRepaymentDate();
      
      //Call method: setUserNo
      repaymentPlan0.setUserNo("Z|0}fY9OmJ3HO'!n");
      
      //Test Result Assert
      assertNull(repaymentPlan0.getProjectId());
  }

  @Test(timeout = 9000)
  public void test_toString_19()  throws Throwable  {
      //caseID:663e568010e2b4a0d947a78d22d25409
      //CoveredLines: [21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 31, 37, 43, 49, 55, 61, 67, 73, 79, 85, 91, 97, 103]
      //Assert: assertEquals("RepaymentPlan(id=null, consumerId=null, userNo=null, projectId=null, projectNo=null, numberOfPeriods=null, interest=null, principal=null, amount=null, shouldRepaymentDate=null, repaymentStatus=null, createDate=null, commission=null)", method_result);
      
      RepaymentPlan repaymentPlan0 = new RepaymentPlan();
      
      //Call method: toString
      String string0 = repaymentPlan0.toString();
      
      //Test Result Assert
      assertEquals("RepaymentPlan(id=null, consumerId=null, userNo=null, projectId=null, projectNo=null, numberOfPeriods=null, interest=null, principal=null, amount=null, shouldRepaymentDate=null, repaymentStatus=null, createDate=null, commission=null)", string0);
  }
}
