/*
 * This file was automatically generated by SmartUnit
 */

package sut.com.wanxin.uaa.config;

import org.junit.Test;
import static org.junit.Assert.*;
import java.lang.reflect.Method;
import static org.smartunit.shaded.org.mockito.Mockito.*;
import org.smartunit.shaded.org.mockito.ArgumentMatchers;
import static org.smartunit.runtime.SmartAssertions.*;
import com.wanxin.uaa.config.SecurityConfig;
import com.wanxin.uaa.domain.IntegrationUserDetailsAuthenticationProvider;
import org.junit.runner.RunWith;
import org.smartunit.runtime.ExecutorServiceAnswer;
import org.smartunit.runtime.SmartRunner;
import org.smartunit.runtime.SmartRunnerParameters;
import org.smartunit.runtime.TransactionTemplateAnswer;
import org.smartunit.runtime.ViolatedAssumptionAnswer;
import org.springframework.security.config.annotation.web.builders.WebSecurity;

@RunWith(SmartRunner.class) @SmartRunnerParameters(mockJVMNonDeterminism = true, useVNET = true, resetStaticState = true) 
public class SecurityConfig_SSTest extends SecurityConfig_SSTest_scaffolding {
// allCoveredLines:[34, 41, 46, 57, 63, 67]

  @Test(timeout = 9000)
  public void test_authenticationManagerBean_0()  throws Throwable  {
      //caseID:d2bb99f02e362228920ae402d39d404c
      //CoveredLines: [34, 57]
      
      SecurityConfig securityConfig0 = new SecurityConfig();
      
      //Call method: authenticationManagerBean
      try { 
        securityConfig0.authenticationManagerBean();
      } catch(Throwable e) {
      }
  }

  @Test(timeout = 9000)
  public void test_configure_1()  throws Throwable  {
      //caseID:98c3682a32ca50eba4ae4d3682610943
      //CoveredLines: [63, 67]
      //Input_0_WebSecurity: {ignoring=webSecurity_IgnoredRequestConfigurer0}
      
      //mock securityConfig0
      SecurityConfig securityConfig0 = mock(SecurityConfig.class, CALLS_REAL_METHODS);
      //mock webSecurity_IgnoredRequestConfigurer0
      WebSecurity.IgnoredRequestConfigurer webSecurity_IgnoredRequestConfigurer0 = mock(WebSecurity.IgnoredRequestConfigurer.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      //mock webSecurity0
      WebSecurity webSecurity0 = mock(WebSecurity.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      doReturn(webSecurity_IgnoredRequestConfigurer0).when(webSecurity0).ignoring();
      
      //Call method: configure
      securityConfig0.configure(webSecurity0);
  }

  @Test(timeout = 9000)
  public void test_integrationUserDetailsAuthenticationProvider_2()  throws Throwable  {
      //caseID:3cee26bf1c0e1a641b219d48ec928899
      //CoveredLines: [34, 41, 46]
      //Assert: assertTrue(method_result.isHideUserNotFoundExceptions());
      
      SecurityConfig securityConfig0 = new SecurityConfig();
      
      //Call method: integrationUserDetailsAuthenticationProvider
      IntegrationUserDetailsAuthenticationProvider integrationUserDetailsAuthenticationProvider0 = securityConfig0.integrationUserDetailsAuthenticationProvider();
      
      //Test Result Assert
      assertTrue(integrationUserDetailsAuthenticationProvider0.isHideUserNotFoundExceptions());
  }
}
