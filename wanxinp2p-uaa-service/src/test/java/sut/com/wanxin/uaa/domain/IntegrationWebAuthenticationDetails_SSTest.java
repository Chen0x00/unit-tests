/*
 * This file was automatically generated by SmartUnit
 */

package sut.com.wanxin.uaa.domain;

import org.junit.Test;
import static org.junit.Assert.*;
import java.lang.reflect.Method;
import static org.smartunit.shaded.org.mockito.Mockito.*;
import org.smartunit.shaded.org.mockito.ArgumentMatchers;
import com.wanxin.uaa.domain.IntegrationWebAuthenticationDetails;
import javax.servlet.http.HttpServletRequest;
import org.junit.runner.RunWith;
import org.smartunit.runtime.ExecutorServiceAnswer;
import org.smartunit.runtime.SmartRunner;
import org.smartunit.runtime.SmartRunnerParameters;
import org.smartunit.runtime.TransactionTemplateAnswer;
import org.smartunit.runtime.ViolatedAssumptionAnswer;

@RunWith(SmartRunner.class) @SmartRunnerParameters(mockJVMNonDeterminism = true, useVNET = true, resetStaticState = true) 
public class IntegrationWebAuthenticationDetails_SSTest extends IntegrationWebAuthenticationDetails_SSTest_scaffolding {
// allCoveredLines:[26, 27, 28, 29, 30, 34, 38, 42]

  @Test(timeout = 9000)
  public void test_getAuthenticationType_0()  throws Throwable  {
      //caseID:1765a116c65a93c3ab5f831f261d95df
      //CoveredLines: [26, 27, 28, 29, 30, 42]
      //Assert: assertNull(method_result);
      
      //mock httpServletRequest0
      HttpServletRequest httpServletRequest0 = mock(HttpServletRequest.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      IntegrationWebAuthenticationDetails integrationWebAuthenticationDetails0 = new IntegrationWebAuthenticationDetails(httpServletRequest0);
      
      //Call method: getAuthenticationType
      String string0 = integrationWebAuthenticationDetails0.getAuthenticationType();
      
      //Test Result Assert
      assertNull(string0);
  }

  @Test(timeout = 9000)
  public void test_getDomain_1()  throws Throwable  {
      //caseID:fae0bbd112e13e70be2fd0d392048cac
      //CoveredLines: [26, 27, 28, 29, 30, 34]
      //Assert: assertNull(method_result);
      
      //mock httpServletRequest0
      HttpServletRequest httpServletRequest0 = mock(HttpServletRequest.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      IntegrationWebAuthenticationDetails integrationWebAuthenticationDetails0 = new IntegrationWebAuthenticationDetails(httpServletRequest0);
      
      //Call method: getDomain
      String string0 = integrationWebAuthenticationDetails0.getDomain();
      
      //Test Result Assert
      assertNull(string0);
  }

  @Test(timeout = 9000)
  public void test_getKey_2()  throws Throwable  {
      //caseID:d3cea7ecdfe6638a6cf56a212f213723
      //CoveredLines: [26, 27, 28, 29, 30, 38]
      //Assert: assertNull(method_result);
      
      //mock httpServletRequest0
      HttpServletRequest httpServletRequest0 = mock(HttpServletRequest.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      IntegrationWebAuthenticationDetails integrationWebAuthenticationDetails0 = new IntegrationWebAuthenticationDetails(httpServletRequest0);
      
      //Call method: getKey
      String string0 = integrationWebAuthenticationDetails0.getKey();
      
      //Test Result Assert
      assertNull(string0);
  }
}
