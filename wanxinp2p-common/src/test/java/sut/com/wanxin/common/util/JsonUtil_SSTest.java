/*
 * This file was automatically generated by SmartUnit
 */

package sut.com.wanxin.common.util;

import org.junit.Test;
import static org.junit.Assert.*;
import java.lang.reflect.Method;
import com.wanxin.common.util.JsonUtil;
import java.util.LinkedList;
import java.util.List;
import java.util.Map;
import org.junit.runner.RunWith;
import org.smartunit.runtime.SmartRunner;
import org.smartunit.runtime.SmartRunnerParameters;

@RunWith(SmartRunner.class) @SmartRunnerParameters(mockJVMNonDeterminism = true, useVNET = true, resetStaticState = true) 
public class JsonUtil_SSTest extends JsonUtil_SSTest_scaffolding {
// allCoveredLines:[18, 20, 24, 34, 36, 37, 38, 39, 41, 51, 53, 54, 55, 56, 57]

  @Test(timeout = 9000)
  public void test_jsonToList_0()  throws Throwable  {
      //caseID:07913dd8f10edacb3f590602ca8dc05f
      //CoveredLines: [51, 53, 56, 57]
      //Input_0_String: null
      //Assert: assertNull(method_result);
      
      
      //Call method: jsonToList
      List<Map<String, Object>> list0 = JsonUtil.jsonToList((String) null);
      
      //Test Result Assert
      assertNull(list0);
  }

  @Test(timeout = 9000)
  public void test_jsonToList_1()  throws Throwable  {
      //caseID:c7a205f93c507ca92a46c72a089d1c27
      //CoveredLines: [51, 53, 54, 55, 57]
      //Input_0_String: com.google.common.hash.Funnels$StringCharsetFunnel
      //Assert: assertEquals(0, method_result.size());
      
      
      //Call method: jsonToList
      List<Map<String, Object>> list0 = JsonUtil.jsonToList("com.google.common.hash.Funnels$StringCharsetFunnel");
      
      //Test Result Assert
      assertEquals(0, list0.size());
  }

  @Test(timeout = 9000)
  public void test_jsonToMap_2()  throws Throwable  {
      //caseID:f9244d26e1730b85109828237cc3b168
      //CoveredLines: [18, 34, 36, 39, 41]
      //Input_0_String: null
      //Assert: assertNull(method_result);
      
      JsonUtil jsonUtil0 = new JsonUtil();
      
      //Call method: jsonToMap
      Map<String, Object> map0 = JsonUtil.jsonToMap((String) null);
      
      //Test Result Assert
      assertNull(map0);
  }

  @Test(timeout = 9000)
  public void test_jsonToMap_3()  throws Throwable  {
      //caseID:bc06676dc0d1d0006ea3f1894d4e56a3
      //CoveredLines: [18, 34, 36, 37, 38, 41]
      //Input_0_String: Funnels.unencodedCharsFunnel()
      //Assert: assertEquals(0, method_result.size());
      
      JsonUtil jsonUtil0 = new JsonUtil();
      
      //Call method: jsonToMap
      Map<String, Object> map0 = JsonUtil.jsonToMap("Funnels.unencodedCharsFunnel()");
      
      //Test Result Assert
      assertEquals(0, map0.size());
  }

  @Test(timeout = 9000)
  public void test_listTojson_4()  throws Throwable  {
      //caseID:16a7ae13a9cd5b5c5cdd001d4359a558
      //CoveredLines: [24]
      //Input_0_List: linkedList0
      //Assert: assertEquals("[]", method_result);
      
      LinkedList<String> linkedList0 = new LinkedList<String>();
      
      //Call method: listTojson
      String string0 = JsonUtil.listTojson(linkedList0);
      
      //Test Result Assert
      assertEquals("[]", string0);
  }

  @Test(timeout = 9000)
  public void test_objectTojson_5()  throws Throwable  {
      //caseID:3017d1899d4b04dc34922dd9d1f95181
      //CoveredLines: [20]
      //Input_0_Object: json\u8F6C\u6362Map\u51FA\u9519: 
      //Assert: assertEquals("\"json\u8F6C\u6362Map\u51FA\u9519: \"", method_result);
      
      
      //Call method: objectTojson
      String string0 = JsonUtil.objectTojson("json\u8F6C\u6362Map\u51FA\u9519: ");
      
      //Test Result Assert
      assertEquals("\"json\u8F6C\u6362Map\u51FA\u9519: \"", string0);
  }
}
