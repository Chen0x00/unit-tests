/*
 * This file was automatically generated by SmartUnit
 */

package sut.com.wanxin.common.domain;

import org.junit.Test;
import static org.junit.Assert.*;
import java.lang.reflect.Method;
import static org.smartunit.shaded.org.mockito.Mockito.*;
import org.smartunit.shaded.org.mockito.ArgumentMatchers;
import com.wanxin.common.domain.BusinessException;
import com.wanxin.common.domain.ErrorCode;
import org.junit.runner.RunWith;
import org.smartunit.runtime.ExecutorServiceAnswer;
import org.smartunit.runtime.SmartRunner;
import org.smartunit.runtime.SmartRunnerParameters;
import org.smartunit.runtime.TransactionTemplateAnswer;
import org.smartunit.runtime.ViolatedAssumptionAnswer;

@RunWith(SmartRunner.class) @SmartRunnerParameters(mockJVMNonDeterminism = true, useVNET = true, resetStaticState = true) 
public class BusinessException_SSTest extends BusinessException_SSTest_scaffolding {
// allCoveredLines:[14, 15, 16, 19, 20, 23, 24, 27, 28, 29, 32, 33, 36, 37, 38, 41, 42, 45, 46, 47, 50, 51, 54, 55, 56, 59, 63, 64]

  @Test(timeout = 9000)
  public void test_getErrorCode_0()  throws Throwable  {
      //caseID:fec891cb90a4cff6404b4f6bf71ad0b2
      //CoveredLines: [50, 51, 59]
      //Assert: assertNull(method_result);
      
      //mock throwable0
      Throwable throwable0 = mock(Throwable.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      BusinessException businessException0 = new BusinessException(throwable0);
      
      //Call method: getErrorCode
      ErrorCode errorCode0 = businessException0.getErrorCode();
      
      //Test Result Assert
      assertNull(errorCode0);
  }

  @Test(timeout = 9000)
  public void test_getErrorCode_1()  throws Throwable  {
      //caseID:f397108635a09d43e79458a71bf3742e
      //CoveredLines: [32, 33, 59]
      //Assert: assertNull(method_result);
      
      //mock throwable0
      Throwable throwable0 = mock(Throwable.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      BusinessException businessException0 = new BusinessException("", throwable0);
      
      //Call method: getErrorCode
      ErrorCode errorCode0 = businessException0.getErrorCode();
      
      //Test Result Assert
      assertNull(errorCode0);
  }

  @Test(timeout = 9000)
  public void test_getErrorCode_2()  throws Throwable  {
      //caseID:215c4c0f1444214b2341e73d639f655b
      //CoveredLines: [23, 24, 59]
      //Assert: assertNull(method_result);
      
      //mock throwable0
      Throwable throwable0 = mock(Throwable.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      BusinessException businessException0 = new BusinessException("should never be called", throwable0, false, false);
      
      //Call method: getErrorCode
      ErrorCode errorCode0 = businessException0.getErrorCode();
      
      //Test Result Assert
      assertNull(errorCode0);
  }

  @Test(timeout = 9000)
  public void test_getErrorCode_3()  throws Throwable  {
      //caseID:15769917a4afd0603a56192262f7e51d
      //CoveredLines: [41, 42, 59]
      //Assert: assertNull(method_result);
      
      BusinessException businessException0 = new BusinessException("Predicates.not(");
      
      //Call method: getErrorCode
      ErrorCode errorCode0 = businessException0.getErrorCode();
      
      //Test Result Assert
      assertNull(errorCode0);
  }

  @Test(timeout = 9000)
  public void test_getErrorCode_4()  throws Throwable  {
      //caseID:1b84bbaf6ad096c7e3e6ad95eeec7a21
      //CoveredLines: [27, 28, 29, 59]
      //Assert: assertEquals(0, method_result.getCode());
      
      //mock errorCode0
      ErrorCode errorCode0 = mock(ErrorCode.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      //mock throwable0
      Throwable throwable0 = mock(Throwable.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      BusinessException businessException0 = new BusinessException(errorCode0, "3HYfQ`pl44&1`av", throwable0, true, true);
      
      //Call method: getErrorCode
      ErrorCode errorCode1 = businessException0.getErrorCode();
      
      //Test Result Assert
      assertEquals(0, errorCode1.getCode());
  }

  @Test(timeout = 9000)
  public void test_getErrorCode_5()  throws Throwable  {
      //caseID:a9a750b9e7a08bcf8f3cbca1c2163fbb
      //CoveredLines: [45, 46, 47, 59]
      //Assert: assertNull(method_result.getDesc());
      
      //mock errorCode0
      ErrorCode errorCode0 = mock(ErrorCode.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      BusinessException businessException0 = new BusinessException(errorCode0, "R");
      
      //Call method: getErrorCode
      ErrorCode errorCode1 = businessException0.getErrorCode();
      
      //Test Result Assert
      assertNull(errorCode1.getDesc());
  }

  @Test(timeout = 9000)
  public void test_getErrorCode_6()  throws Throwable  {
      //caseID:f358372c157a331a40d0ce2941b55d4b
      //CoveredLines: [14, 15, 16, 59]
      //Assert: assertNull(method_result.getDesc());
      
      //mock errorCode0
      ErrorCode errorCode0 = mock(ErrorCode.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      BusinessException businessException0 = new BusinessException(errorCode0);
      
      //Call method: getErrorCode
      ErrorCode errorCode1 = businessException0.getErrorCode();
      
      //Test Result Assert
      assertNull(errorCode1.getDesc());
  }

  @Test(timeout = 9000)
  public void test_setErrorCode_7()  throws Throwable  {
      //caseID:fa3b32d1f33cae3aef390c1cd3d59a52
      //CoveredLines: [19, 20, 63, 64]
      //Input_0_ErrorCode: {}
      
      BusinessException businessException0 = new BusinessException();
      //mock errorCode0
      ErrorCode errorCode0 = mock(ErrorCode.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      
      //Call method: setErrorCode
      businessException0.setErrorCode(errorCode0);
  }

  @Test(timeout = 9000)
  public void test_setErrorCode_8()  throws Throwable  {
      //caseID:dc0e47f2fac6a0c92a003a0344d221f4
      //CoveredLines: [54, 55, 56, 63, 64]
      //Input_0_ErrorCode: {}
      
      //mock errorCode0
      ErrorCode errorCode0 = mock(ErrorCode.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      //mock throwable0
      Throwable throwable0 = mock(Throwable.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      BusinessException businessException0 = new BusinessException(errorCode0, throwable0);
      //mock errorCode1
      ErrorCode errorCode1 = mock(ErrorCode.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      
      //Call method: setErrorCode
      businessException0.setErrorCode(errorCode1);
  }

  @Test(timeout = 9000)
  public void test_setErrorCode_9()  throws Throwable  {
      //caseID:4e9705b99a5947e53fefeeb67ef94659
      //CoveredLines: [36, 37, 38, 63, 64]
      //Input_0_ErrorCode: {}
      
      //mock errorCode0
      ErrorCode errorCode0 = mock(ErrorCode.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      //mock throwable0
      Throwable throwable0 = mock(Throwable.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      BusinessException businessException0 = new BusinessException(errorCode0, "", throwable0);
      //mock errorCode1
      ErrorCode errorCode1 = mock(ErrorCode.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      
      //Call method: setErrorCode
      businessException0.setErrorCode(errorCode1);
  }
}
