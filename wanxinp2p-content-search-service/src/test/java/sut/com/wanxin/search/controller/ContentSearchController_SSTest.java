/*
 * This file was automatically generated by SmartUnit
 */

package sut.com.wanxin.search.controller;

import org.junit.Test;
import static org.junit.Assert.*;
import java.lang.reflect.Method;
import static org.smartunit.shaded.org.mockito.Mockito.*;
import org.smartunit.shaded.org.mockito.ArgumentMatchers;
import com.wanxin.api.search.model.ProjectQueryParamsDTO;
import com.wanxin.api.transaction.model.ProjectDTO;
import com.wanxin.common.domain.PageVO;
import com.wanxin.common.domain.RestResponse;
import com.wanxin.search.controller.ContentSearchController;
import com.wanxin.search.service.ContentSearchService;
import org.junit.runner.RunWith;
import org.smartunit.runtime.ExecutorServiceAnswer;
import org.smartunit.runtime.PrivateAccess;
import org.smartunit.runtime.SmartRunner;
import org.smartunit.runtime.SmartRunnerParameters;
import org.smartunit.runtime.TransactionTemplateAnswer;
import org.smartunit.runtime.ViolatedAssumptionAnswer;

@RunWith(SmartRunner.class) @SmartRunnerParameters(mockJVMNonDeterminism = true, useVNET = true, resetStaticState = true) 
public class ContentSearchController_SSTest extends ContentSearchController_SSTest_scaffolding {
// allCoveredLines:[26, 45]

  @Test(timeout = 9000)
  public void test_queryProjectIndex_0()  throws Throwable  {
      //caseID:8fbc19a4a5731b3f0a93594842baa037
      //CoveredLines: [26, 45]
      //Input_0_ProjectQueryParamsDTO: {}
      //Input_1_Integer: 3763
      //Input_2_Integer: 3763
      //Input_3_String: 
      //Input_4_String: 
      //Assert: assertEquals(0, method_result.getCode());
      
      ContentSearchController contentSearchController0 = new ContentSearchController();
      //mock contentSearchService0
      ContentSearchService contentSearchService0 = mock(ContentSearchService.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      
      PrivateAccess.setVariable((Class<?>) ContentSearchController.class, contentSearchController0, "contentSearchService", (Object) contentSearchService0);
      //mock projectQueryParamsDTO0
      ProjectQueryParamsDTO projectQueryParamsDTO0 = mock(ProjectQueryParamsDTO.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      Integer integer0 = new Integer(3763);
      
      //Call method: queryProjectIndex
      RestResponse<PageVO<ProjectDTO>> restResponse0 = contentSearchController0.queryProjectIndex(projectQueryParamsDTO0, integer0, integer0, "", "");
      
      //Test Result Assert
      assertEquals(0, restResponse0.getCode());
  }
}
