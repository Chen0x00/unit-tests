/*
 * This file was automatically generated by SmartUnit
 */

package sut.com.wanxin.gateway.common.util;

import org.junit.Test;
import static org.junit.Assert.*;
import java.lang.reflect.Method;
import static org.smartunit.shaded.org.mockito.Mockito.*;
import org.smartunit.shaded.org.mockito.ArgumentMatchers;
import static org.smartunit.runtime.SmartAssertions.*;
import com.fasterxml.jackson.databind.exc.InvalidDefinitionException;
import com.wanxin.common.domain.RestResponse;
import com.wanxin.gateway.common.util.HttpUtil;
import javax.servlet.http.HttpServletResponse;
import org.junit.runner.RunWith;
import org.smartunit.runtime.ExecutorServiceAnswer;
import org.smartunit.runtime.SmartRunner;
import org.smartunit.runtime.SmartRunnerParameters;
import org.smartunit.runtime.TransactionTemplateAnswer;
import org.smartunit.runtime.ViolatedAssumptionAnswer;

@RunWith(SmartRunner.class) @SmartRunnerParameters(mockJVMNonDeterminism = true, useVNET = true, resetStaticState = true) 
public class HttpUtil_SSTest extends HttpUtil_SSTest_scaffolding {
// allCoveredLines:[14, 16, 17, 18, 19]

  @Test(timeout = 9000)
  public void test_writerError_0()  throws Throwable  {
      //caseID:1099f95af82816faaece583bf6a4670b
      //CoveredLines: [14, 16, 17, 18, 19]
      //Input_0_RestResponse: {}
      //Input_1_HttpServletResponse: {}
      
      HttpUtil httpUtil0 = new HttpUtil();
      //mock restResponse0
      RestResponse<String> restResponse0 = (RestResponse<String>) mock(RestResponse.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      //mock httpServletResponse0
      HttpServletResponse httpServletResponse0 = mock(HttpServletResponse.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      
      //Call method: writerError
      try { 
        HttpUtil.writerError(restResponse0, httpServletResponse0);
      } catch(Throwable e) {
         verifyException("com.fasterxml.jackson.databind.exc.InvalidDefinitionException", e);
         assertEquals("com.fasterxml.jackson.databind.exc.InvalidDefinitionException", e.getClass().getName());
      }
  }
}
