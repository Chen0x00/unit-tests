/*
 * This file was automatically generated by SmartUnit
 */

package sut.com.wanxin.gateway.config;

import org.junit.Test;
import static org.junit.Assert.*;
import java.lang.reflect.Method;
import static org.smartunit.shaded.org.mockito.Mockito.*;
import org.smartunit.shaded.org.mockito.ArgumentMatchers;
import com.wanxin.gateway.config.RestAccessDeniedHandler;
import javax.servlet.ServletOutputStream;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import org.junit.runner.RunWith;
import org.smartunit.runtime.ExecutorServiceAnswer;
import org.smartunit.runtime.SmartRunner;
import org.smartunit.runtime.SmartRunnerParameters;
import org.smartunit.runtime.TransactionTemplateAnswer;
import org.smartunit.runtime.ViolatedAssumptionAnswer;
import org.springframework.security.access.AccessDeniedException;

@RunWith(SmartRunner.class) @SmartRunnerParameters(mockJVMNonDeterminism = true, useVNET = true, resetStaticState = true) 
public class RestAccessDeniedHandler_SSTest extends RestAccessDeniedHandler_SSTest_scaffolding {
// allCoveredLines:[19, 22, 23, 24]

  @Test(timeout = 9000)
  public void test_handle_0()  throws Throwable  {
      //caseID:bb3377c783cf3a3db2be6952aaf30ecd
      //CoveredLines: [19, 22, 23, 24]
      //Input_0_HttpServletRequest: {}
      //Input_1_HttpServletResponse: {getOutputStream=servletOutputStream0}
      //Input_2_AccessDeniedException: \"\"
      
      RestAccessDeniedHandler restAccessDeniedHandler0 = new RestAccessDeniedHandler();
      //mock httpServletRequest0
      HttpServletRequest httpServletRequest0 = mock(HttpServletRequest.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      //mock servletOutputStream0
      ServletOutputStream servletOutputStream0 = mock(ServletOutputStream.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      //mock httpServletResponse0
      HttpServletResponse httpServletResponse0 = mock(HttpServletResponse.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      doReturn(servletOutputStream0).when(httpServletResponse0).getOutputStream();
      AccessDeniedException accessDeniedException0 = new AccessDeniedException("");
      
      //Call method: handle
      restAccessDeniedHandler0.handle(httpServletRequest0, httpServletResponse0, accessDeniedException0);
  }
}
